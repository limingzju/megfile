Search.setIndex({"docnames": ["cli", "index", "megfile", "megfile.fs", "megfile.fs_path", "megfile.http", "megfile.http_path", "megfile.s3", "megfile.s3_path", "megfile.smart", "megfile.smart_path", "megfile.stdio", "megfile.stdio_path", "readme"], "filenames": ["cli.rst", "index.rst", "megfile.rst", "megfile.fs.rst", "megfile.fs_path.rst", "megfile.http.rst", "megfile.http_path.rst", "megfile.s3.rst", "megfile.s3_path.rst", "megfile.smart.rst", "megfile.smart_path.rst", "megfile.stdio.rst", "megfile.stdio_path.rst", "readme.rst"], "titles": ["Command Line Interface", "Welcome to megfile\u2019s documentation!", "API Reference", "megfile.fs module", "megfile.fs_path module", "megfile.http module", "megfile.http_path module", "megfile.s3 module", "megfile.s3_path module", "megfile.smart module", "megfile.smart_path module", "megfile.stdio module", "megfile.stdio_path module", "Getting Started"], "terms": {"client": [0, 7, 8], "option": [0, 2, 3, 4, 7, 8, 9], "arg": [0, 2, 10], "concaten": [0, 2, 7, 8, 9], "ani": [0, 2, 3, 4, 7, 8, 9, 13], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "send": 0, "them": 0, "stdout": [0, 2, 11, 12], "path": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "argument": [0, 2, 7, 8, 9], "requir": [0, 2, 9, 13], "copi": [0, 1, 2, 3, 4, 7, 8, 9, 13], "from": [0, 1, 2, 3, 4, 7, 8, 9], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "dest": 0, "skip": 0, "alreadi": [0, 2, 3, 4], "src_path": [0, 2, 3, 4, 7, 8, 9], "dst_path": [0, 2, 3, 4, 7, 8, 9], "r": [0, 2, 7, 8, 9, 13], "recurs": [0, 2, 3, 4, 7, 8, 9], "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "perform": [0, 2, 7, 8], "all": [0, 2, 3, 4, 7, 8, 9, 10, 13], "object": [0, 2, 7, 8, 9, 10], "under": [0, 2, 3, 4], "specifi": [0, 2, 3, 4, 7, 8, 9, 13], "directori": [0, 2, 3, 4, 7, 8, 9, 10, 13], "prefix": [0, 2, 3, 4, 7, 8, 9], "t": [0, 2, 3, 4, 5, 6, 7, 8, 9, 13], "target": [0, 2, 3, 4, 7, 8, 9, 13], "treat": 0, "normal": [0, 2, 10], "list": [0, 2, 3, 4, 7, 8, 9], "long": 0, "modif": [0, 2, 10], "time": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10], "h": [0, 13], "human": 0, "readabl": [0, 7, 8], "displai": 0, "format": [0, 2, 3, 4, 5, 6, 7, 8, 9, 13], "produc": 0, "an": [0, 2, 3, 4, 7, 8, 9, 10, 13], "make": [0, 2, 3, 4, 7, 8, 13], "doesn": [0, 2, 3, 4, 7, 8, 9, 13], "exist": [0, 1, 2, 3, 4, 7, 8, 9, 10, 13], "return": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "number": [0, 2, 7, 8], "remot": 0, "move": [0, 1, 2, 3, 4, 7, 8, 9, 13], "remov": [0, 1, 2, 3, 4, 7, 8, 9, 10, 13], "total": [0, 2, 9], "ident": 0, "modifi": [0, 2, 3, 4, 5, 6, 7, 8, 9], "destin": [0, 2, 3, 4, 7, 8, 9], "onli": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13], "get": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "start": [1, 2, 3, 4, 7, 8, 9], "megvii": 1, "librari": [1, 2, 3, 4], "quick": 1, "function": [1, 2, 3, 4, 7, 8, 9], "interfac": [1, 2, 9], "smartpath": [1, 2, 10], "command": 1, "line": [1, 7, 8], "instal": 1, "pypi": 1, "build": 1, "develop": 1, "environ": 1, "configur": 1, "how": 1, "contribut": 1, "api": 1, "refer": [1, 3, 4, 5, 6, 7, 8, 13], "submodul": 1, "f": [1, 2, 4, 7, 8, 9, 13], "modul": 1, "fspath": [1, 2, 3, 4], "statresult": [1, 2, 3, 4, 5, 6, 7, 8, 9], "fs_abspath": [1, 2, 3], "fs_access": [1, 2, 3], "fs_copi": [1, 2, 3, 4], "fs_cwd": [1, 2, 3], "fs_exist": [1, 2, 3], "fs_expandus": [1, 2, 3], "fs_getmd5": [1, 2, 3], "fs_getmtim": [1, 2, 3, 4], "fs_getsiz": [1, 2, 3, 4], "fs_glob": [1, 2, 3, 4], "fs_glob_stat": [1, 2, 3], "fs_home": [1, 2, 3], "fs_iglob": [1, 2, 3], "fs_isab": [1, 2, 3], "fs_isdir": [1, 2, 3], "fs_isfil": [1, 2, 3], "fs_islink": [1, 2, 3], "fs_ismount": [1, 2, 3], "fs_listdir": [1, 2, 3], "fs_load_from": [1, 2, 3], "fs_makedir": [1, 2, 3], "fs_move": [1, 2, 3], "fs_path_join": [1, 2, 3, 4], "fs_readlink": [1, 2, 3], "fs_realpath": [1, 2, 3, 4], "fs_relpath": [1, 2, 3], "fs_remov": [1, 2, 3], "fs_renam": [1, 2, 3], "fs_resolv": [1, 2, 3], "fs_save_a": [1, 2, 3], "fs_scan": [1, 2, 3], "fs_scan_stat": [1, 2, 3], "fs_scandir": [1, 2, 3], "fs_stat": [1, 2, 3], "fs_symlink": [1, 2, 3], "fs_sync": [1, 2, 3], "fs_unlink": [1, 2, 3], "fs_walk": [1, 2, 3, 4], "is_f": [1, 2, 3, 4], "fs_path": [1, 2], "s3": [1, 2, 8, 9, 13], "s3bufferedwrit": [1, 2, 7, 8], "s3cacher": [1, 2, 7, 8, 9], "s3limitedseekablewrit": [1, 2, 7, 8], "s3path": [1, 2, 7, 8, 13], "s3prefetchread": [1, 2, 7, 8], "s3sharecacheread": [1, 2, 7, 8], "get_endpoint_url": [1, 2, 7, 8], "get_s3_client": [1, 2, 7, 8], "get_s3_sess": [1, 2, 7, 8], "is_s3": [1, 2, 7, 8], "parse_s3_url": [1, 2, 7, 8], "s3_access": [1, 2, 7], "s3_buffered_open": [1, 2, 7, 8, 9], "s3_cached_open": [1, 2, 7, 8], "s3_copi": [1, 2, 7], "s3_download": [1, 2, 7, 8], "s3_exist": [1, 2, 7, 8], "s3_getmd5": [1, 2, 7], "s3_getmtim": [1, 2, 7, 8], "s3_getsiz": [1, 2, 7, 8], "s3_glob": [1, 2, 7], "s3_glob_stat": [1, 2, 7], "s3_hasbucket": [1, 2, 7], "s3_iglob": [1, 2, 7], "s3_isdir": [1, 2, 7], "s3_isfil": [1, 2, 7, 8], "s3_islink": [1, 2, 7], "s3_legacy_open": [1, 2, 7, 8], "s3_listdir": [1, 2, 7], "s3_load_cont": [1, 2, 7, 8], "s3_load_from": [1, 2, 7], "s3_makedir": [1, 2, 7], "s3_memory_open": [1, 2, 7, 8], "s3_move": [1, 2, 7], "s3_open": [1, 2, 7, 8], "s3_path_join": [1, 2, 7, 8], "s3_pipe_open": [1, 2, 7, 8], "s3_prefetch_open": [1, 2, 7, 8], "s3_readlink": [1, 2, 7], "s3_remov": [1, 2, 7], "s3_renam": [1, 2, 7], "s3_save_a": [1, 2, 7], "s3_scan": [1, 2, 7], "s3_scan_stat": [1, 2, 7], "s3_scandir": [1, 2, 7], "s3_share_cache_open": [1, 2, 7, 8], "s3_stat": [1, 2, 7], "s3_symlink": [1, 2, 7], "s3_sync": [1, 2, 7], "s3_unlink": [1, 2, 7], "s3_upload": [1, 2, 7, 8], "s3_walk": [1, 2, 7], "s3_path": [1, 2, 9], "smart": [1, 2], "register_copy_func": [1, 2, 9], "smart_abspath": [1, 2, 9], "smart_access": [1, 2, 9], "smart_cach": [1, 2, 9], "smart_combine_open": [1, 2, 9], "smart_copi": [1, 2, 9], "smart_exist": [1, 2, 9, 13], "smart_getmd5": [1, 2, 9], "smart_getmtim": [1, 2, 9], "smart_gets": [1, 2, 9], "smart_glob": [1, 2, 9, 13], "smart_glob_stat": [1, 2, 9], "smart_iglob": [1, 2, 9], "smart_isab": [1, 2, 9], "smart_isdir": [1, 2, 9], "smart_isfil": [1, 2, 9], "smart_islink": [1, 2, 9], "smart_ismount": [1, 2, 9], "smart_listdir": [1, 2, 9], "smart_load_cont": [1, 2, 9], "smart_load_from": [1, 2, 9], "smart_load_text": [1, 2, 9], "smart_makedir": [1, 2, 9], "smart_mov": [1, 2, 9], "smart_open": [1, 2, 7, 8, 9, 13], "smart_path_join": [1, 2, 9], "smart_readlink": [1, 2, 9], "smart_realpath": [1, 2, 9], "smart_relpath": [1, 2, 9], "smart_remov": [1, 2, 9, 13], "smart_renam": [1, 2, 9], "smart_save_a": [1, 2, 9], "smart_save_cont": [1, 2, 9], "smart_save_text": [1, 2, 9], "smart_scan": [1, 2, 9], "smart_scan_stat": [1, 2, 9], "smart_scandir": [1, 2, 9], "smart_stat": [1, 2, 9, 13], "smart_symlink": [1, 2, 9], "smart_sync": [1, 2, 9, 13], "smart_touch": [1, 2, 9], "smart_unlink": [1, 2, 9], "smart_walk": [1, 2, 9], "smart_path": [1, 2, 13], "get_traditional_path": [1, 2, 10], "http": [1, 2, 6, 9, 13], "httppath": [1, 2, 5, 6], "httpspath": [1, 2, 5, 6], "get_http_sess": [1, 2, 5, 6], "http_getmtim": [1, 2, 5, 6], "http_getsiz": [1, 2, 5, 6], "http_open": [1, 2, 5], "http_stat": [1, 2, 5], "is_http": [1, 2, 5, 6], "http_path": [1, 2], "stdio": [1, 2, 9, 12, 13], "stdiopath": [1, 2, 11, 12], "is_stdio": [1, 2, 11, 12], "stdio_open": [1, 2, 11], "stdio_path": [1, 2], "abspath": [1, 2, 3, 4, 10], "access": [1, 2, 3, 4, 7, 8, 9, 10, 13], "cwd": [1, 2, 3, 4], "expandus": [1, 2, 3, 4], "from_uri": [1, 2, 3, 4, 10], "getmtim": [1, 2, 3, 4, 5, 6, 7, 8, 10], "getsiz": [1, 2, 3, 4, 5, 6, 7, 8, 10], "glob": [1, 2, 3, 4, 7, 8, 9, 10, 13], "glob_stat": [1, 2, 3, 4, 7, 8, 10], "home": [1, 2, 3, 4], "iglob": [1, 2, 3, 4, 7, 8, 10], "is_absolut": [1, 2, 3, 4, 10], "is_dir": [1, 2, 3, 4, 7, 8, 10], "is_fil": [1, 2, 3, 4, 7, 8, 10], "is_mount": [1, 2, 3, 4, 10], "is_symlink": [1, 2, 3, 4, 7, 8, 10], "joinpath": [1, 2, 3, 4, 10], "listdir": [1, 2, 3, 4, 7, 8, 10], "load": [1, 2, 3, 4, 7, 8, 10], "md5": [1, 2, 3, 4, 7, 8, 9, 10], "mkdir": [1, 2, 3, 4, 7, 8, 10], "open": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "path_with_protocol": [1, 2, 3, 4], "protocol": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "readlink": [1, 2, 3, 4, 7, 8, 10], "realpath": [1, 2, 3, 4, 10], "relpath": [1, 2, 3, 4, 10], "renam": [1, 2, 3, 4, 7, 8, 10], "replac": [1, 2, 3, 4, 10, 13], "resolv": [1, 2, 3, 4], "save": [1, 2, 3, 4, 7, 8, 9, 10], "scan": [1, 2, 3, 4, 7, 8, 10], "scan_stat": [1, 2, 3, 4, 7, 8, 10], "scandir": [1, 2, 3, 4, 7, 8, 10], "stat": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "symlink": [1, 2, 3, 4, 7, 8, 9, 10], "sync": [1, 2, 3, 4, 7, 8, 9, 13], "unlink": [1, 2, 3, 4, 7, 8, 10], "walk": [1, 2, 3, 4, 7, 8, 9, 10], "hasbucket": [1, 2, 7, 8], "anchor": [1, 2, 10], "as_posix": [1, 2, 10], "as_uri": [1, 2, 10], "drive": [1, 2, 10], "is_reserv": [1, 2, 10], "match": [1, 2, 3, 4, 7, 8, 9, 10], "name": [1, 2, 3, 4, 7, 8, 9, 10, 13], "parent": [1, 2, 3, 4, 7, 8, 10], "part": [1, 2, 7, 8, 10], "regist": [1, 2, 9, 10], "relative_to": [1, 2, 10], "root": [1, 2, 3, 4, 7, 8, 9, 10], "stem": [1, 2, 10], "suffix": [1, 2, 7, 8, 10], "touch": [1, 2, 10], "with_nam": [1, 2, 10], "with_suffix": [1, 2, 10], "cat": [1, 13], "cp": [1, 13], "l": [1, 13], "md5sum": 1, "mtime": [1, 2, 3, 4, 5, 6, 7, 8, 9], "mv": 1, "rm": 1, "size": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "version": [1, 2, 10, 13], "github": [1, 13], "index": [1, 2, 7, 8, 9], "search": [1, 2, 3, 4, 7, 8], "page": 1, "megfil": 2, "mode": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "tell": [2, 7, 8, 13], "write": [2, 3, 4, 7, 8, 9, 10, 11, 12, 13], "cache_path": [2, 7, 8], "seek": [2, 7, 8], "read": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "readinto": [2, 7, 8], "readlin": [2, 7, 8], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "union": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "pathlik": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "int": [2, 3, 4, 5, 6, 7, 8, 9, 13], "other_path": [2, 3, 4, 5, 6, 7, 8, 9, 10], "base": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12], "uripath": [2, 3, 4, 5, 6, 7, 8], "e": [2, 3, 4, 7, 8, 9, 13], "g": [2, 3, 4, 7, 8, 9, 13], "data": [2, 3, 4, 5, 6, 7, 8, 9], "test": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13], "absolut": [2, 3, 4, 7, 8, 9, 10], "given": [2, 3, 4, 5, 6, 7, 8, 9, 11], "bool": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "ha": [2, 3, 4, 7, 8, 9, 10], "permiss": [2, 3, 4, 7, 8, 9, 10], "describ": [2, 3, 4, 7, 8, 9, 10], "us": [2, 3, 4, 7, 8, 9, 11, 12, 13], "o": [2, 3, 4, 7, 8, 9], "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12], "enum": [2, 3, 4], "callback": [2, 3, 4, 7, 8, 9], "callabl": [2, 3, 4, 7, 8, 9], "none": [2, 3, 4, 5, 6, 7, 8, 9, 13], "followlink": [2, 3, 4, 7, 8, 9], "fals": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "system": [2, 3, 4, 7, 8, 13], "exclud": [2, 3, 4, 7, 8, 9], "meta": [2, 3, 4, 7, 8], "date": [2, 3, 4], "must": [2, 3, 4], "complet": [2, 3, 4, 7, 8, 9, 13], "The": [2, 3, 4, 7, 8, 9, 13], "differ": [2, 3, 4, 7, 8, 9, 13], "between": [2, 3, 4, 7, 8, 9], "thi": [2, 3, 4, 7, 8, 9, 13], "shutil": [2, 3, 4], "copyfil": [2, 3, 4], "ar": [2, 3, 4, 7, 8, 9, 13], "If": [2, 3, 4, 5, 6, 7, 8, 9, 13], "creat": [2, 3, 4, 7, 8, 9, 10], "allow": [2, 3, 4, 9, 13], "default": [2, 3, 4, 7, 8, 13], "mean": [2, 3, 4, 7, 8], "byte": [2, 3, 4, 5, 6, 7, 8, 9, 10], "written": [2, 3, 4, 7, 8], "pass": [2, 3, 4, 13], "period": [2, 3, 4, 7, 8, 9], "thread": [2, 3, 4, 7, 8, 9, 13], "unsaf": [2, 3, 4], "todo": [2, 3, 4], "implement": [2, 3, 4, 13], "safe": [2, 3, 4], "call": [2, 3, 4, 7, 8, 9], "dure": [2, 3, 4, 7, 8, 9], "input": [2, 3, 4, 7, 8, 9], "sinc": [2, 3, 4, 7, 8, 9], "last": [2, 3, 4, 5, 6, 7, 8, 9, 10], "regard": [2, 3, 4, 9], "els": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12], "true": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "static": [2, 3, 4, 13], "current": [2, 3, 4, 7, 8, 9, 13], "work": [2, 3, 4], "In": [2, 3, 4, 7, 8, 9], "other": [2, 3, 4, 7, 8, 9, 13], "word": [2, 3, 4, 7, 8, 9], "equal": [2, 3, 4, 7, 8], "lexist": [2, 3, 4], "expand": [2, 3, 4], "user": [2, 3, 4, 5, 6, 7, 8, 9], "construct": [2, 3, 4], "unknown": [2, 3, 4], "do": [2, 3, 4, 9, 13], "noth": [2, 3, 4], "classmethod": [2, 3, 4, 10], "float": [2, 3, 4, 5, 6, 7, 8, 9], "unix": [2, 3, 4, 5, 6, 7, 8, 9], "timestamp": [2, 3, 4, 5, 6, 7, 8, 9], "latest": [2, 3, 4, 7, 8, 9, 13], "sum": [2, 3, 4, 7, 8, 9], "includ": [2, 3, 4, 5, 6, 7, 8, 9, 13], "subdirectori": [2, 3, 4, 7, 8, 9], "result": [2, 3, 4, 7, 8, 9, 13], "itself": [2, 3, 4, 7, 8, 9], "0": [2, 3, 4, 7, 8, 9, 13], "empti": [2, 3, 4, 7, 8, 9], "missing_ok": [2, 3, 4, 7, 8, 9], "ascend": [2, 3, 4, 7, 8, 9], "alphabet": [2, 3, 4, 7, 8, 9], "order": [2, 3, 4, 7, 8, 9], "which": [2, 3, 4, 7, 8, 9, 13], "pattern": [2, 3, 4, 7, 8, 9, 10, 13], "notic": [2, 3, 4], "standard": [2, 3, 4], "instead": [2, 3, 4, 9, 13], "when": [2, 3, 4, 7, 8, 9], "pathnam": [2, 3, 4, 9, 10], "like": [2, 3, 4, 7, 8, 9, 13], "behav": [2, 3, 4, 9], "circumst": [2, 3, 4], "No": [2, 3, 4], "guarante": [2, 3, 4, 7, 8], "each": [2, 3, 4, 7, 8, 9], "assum": [2, 3, 4], "b": [2, 3, 4, 13], "c": [2, 3, 4], "d": [2, 3, 4], "txt": [2, 3, 4, 13], "abov": [2, 3, 4, 9], "twice": [2, 3, 4], "same": [2, 3, 4, 7, 8, 9], "acsend": [2, 3, 4, 7, 8, 9], "hidden": [2, 3, 4], "filenam": [2, 3, 4], "star": [2, 3, 4, 13], "found": [2, 3, 4], "rais": [2, 3, 4, 5, 6, 7, 8, 9], "filenotfounderror": [2, 3, 4, 7, 8, 9], "A": [2, 3, 4, 7, 8, 9], "contain": [2, 3, 4, 7, 8, 9], "iter": [2, 3, 4, 5, 6, 7, 8, 9, 10], "fileentri": [2, 3, 4, 7, 8, 9, 10], "tupl": [2, 3, 4, 7, 8, 9], "whether": [2, 3, 4, 7, 8, 9, 10, 13], "isdir": [2, 3, 4], "isfil": [2, 3, 4], "mount": [2, 3, 4, 9, 10], "point": [2, 3, 4, 7, 8, 9, 10], "symbol": [2, 3, 4, 7, 8, 9], "link": [2, 3, 4, 7, 8, 9], "type": [2, 3, 4, 7, 8, 9, 13], "join": [2, 3, 4, 7, 8, 9, 10], "more": [2, 3, 4, 7, 8, 9, 10, 13], "have": [2, 3, 4, 7, 8, 9, 13], "binaryio": [2, 3, 4, 7, 8, 9], "memori": [2, 3, 4, 5, 6, 7, 8, 9], "should": [2, 3, 4, 7, 8, 9, 13], "close": [2, 3, 4, 7, 8, 9], "manual": [2, 3, 4, 7, 8, 9], "binari": [2, 3, 4, 5, 6, 7, 8, 9, 10], "stream": [2, 3, 4, 7, 8, 9, 10], "recalcul": [2, 3, 4, 7, 8, 9], "calcul": [2, 3, 4, 7, 8, 9], "valu": [2, 3, 4, 7, 8, 9], "exist_ok": [2, 3, 4, 7, 8, 9], "fileexistserror": [2, 3, 4, 9], "kwarg": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12], "io": [2, 3, 4, 7, 8, 9, 11, 12, 13], "anystr": [2, 3, 4, 7, 8, 9, 11, 12], "properti": [2, 3, 4, 7, 8, 10], "string": [2, 3, 4, 7, 8, 9], "repres": [2, 3, 4, 7, 8, 9], "real": [2, 3, 4, 7, 8, 9], "rel": [2, 3, 4, 7, 8, 9, 10], "canon": [2, 3, 4, 10], "elimin": [2, 3, 4], "encount": [2, 3, 4], "file_object": [2, 3, 4, 7, 8, 9], "travers": [2, 3, 4, 7, 8, 9], "everi": [2, 3, 4, 7, 8, 9], "gener": [2, 3, 4, 7, 8, 9, 10], "yield": [2, 3, 4, 7, 8, 9], "non": [2, 3, 4, 7, 8, 9], "bucket": [2, 3, 4, 7, 8, 9, 13], "": [2, 3, 4, 5, 6, 7, 8, 9, 13], "desin": [2, 3, 4, 7, 8, 9], "forc": [2, 3, 4], "everyth": [2, 3, 4], "disk": [2, 3, 4], "tree": [2, 3, 4, 9, 10], "top": [2, 3, 4, 7, 8, 9], "down": [2, 3, 4, 9], "For": [2, 3, 4, 7, 8, 9], "3": [2, 3, 4, 7, 8, 9], "dir": [2, 3, 4, 7, 8, 9], "thei": [2, 3, 4, 9], "sort": [2, 3, 4, 7, 8, 9], "Be": [2, 3, 4], "awar": [2, 3, 4], "set": [2, 3, 4, 7, 8, 13], "can": [2, 3, 4, 7, 8, 13], "lead": [2, 3, 4], "infinit": [2, 3, 4], "doe": [2, 3, 4], "keep": [2, 3, 4, 7, 8], "track": [2, 3, 4], "visit": [2, 3, 4], "request": [2, 5, 6, 13], "http_url": [2, 5, 6], "respons": [2, 5, 6], "header": [2, 5, 6, 7, 8], "don": [2, 5, 6, 13], "support": [2, 5, 6, 7, 8, 9, 11, 12, 13], "httppermissionerror": [2, 5, 6], "httpfilenotfounderror": [2, 5, 6], "length": [2, 5, 6], "rb": [2, 5, 6, 7, 8, 9, 11, 12], "bufferedread": [2, 5, 6, 7, 8], "bytesio": [2, 5, 6], "url": [2, 5, 6, 7, 8, 9, 11, 12], "essenti": [2, 5, 6, 11, 12], "now": [2, 5, 6, 7, 8, 11, 12], "initi": [2, 5, 6], "head_bucket": [2, 7, 8], "s3_url": [2, 7, 8, 9], "dst_url": [2, 7, 8], "It": [2, 7, 8], "caller": [2, 7, 8], "responsebl": [2, 7, 8], "ensur": [2, 7, 8, 13], "src_url": [2, 7, 8], "permit": [2, 7, 8, 9], "eixst": [2, 7, 8, 9], "1970": [2, 7, 8, 9], "01": [2, 7, 8, 9], "00": [2, 7, 8, 9], "s3filenotfounderror": [2, 7, 8], "unsupportederror": [2, 7, 8, 9], "note": [2, 7, 8, 13], "try": [2, 7, 8, 9], "wildcard": [2, 7, 8, 9], "charact": [2, 7, 8, 9], "s3_pathnam": [2, 7, 8], "specif": [2, 7, 8], "procedur": [2, 7, 8], "follow": [2, 7, 8, 13], "s3notalinkerror": [2, 7, 8], "s3notadirectoryerror": [2, 7, 8], "info": [2, 7, 8], "upload": [2, 7, 8], "via": [2, 7, 8], "lost": [2, 7, 8], "etag": [2, 7, 8, 9], "pure": [2, 7, 8], "invalid": [2, 7, 8, 13], "becaus": [2, 7, 8, 13], "unavail": [2, 7, 8], "oss": [2, 7, 8, 13], "s3fileexistserror": [2, 7, 8], "s3bucketnotfounderror": [2, 7, 8], "s3_open_func": [2, 7, 8, 9], "s3nametoolongerror": [2, 7, 8], "s3isadirectoryerror": [2, 7, 8], "s3permissionerror": [2, 7, 8], "won": [2, 7, 8, 9], "automat": [2, 7, 8, 9], "identifi": [2, 7, 8], "islnk": [2, 3, 4, 7, 8], "attempt": [2, 7, 8], "s3_dir_url": [2, 7, 8], "bottom": [2, 7, 8], "firstli": [2, 7, 8], "first": [2, 7, 8, 9], "one": [2, 7, 8], "basepath": [2, 10], "whose": [2, 10], "regular": [2, 10], "entri": [2, 10], "path_class": [2, 10], "override_ok": [2, 10], "delet": [2, 10, 13], "through": [2, 10], "correspond": [2, 10], "statu": [2, 10], "baseuripath": [2, 11, 12], "invok": [2, 11, 12], "sy": [2, 11, 12], "stdin": [2, 11, 12], "buffer": [2, 7, 8, 11, 12], "wb": [2, 7, 8, 11, 12], "stdreader": [2, 11, 12], "stdwriter": [2, 11, 12], "param": [2, 3, 7, 8, 9], "accord": [2, 7, 8], "aw": [2, 7, 8, 13], "cli": [2, 7, 8, 13], "max_concurr": [2, 7, 8], "max_buffer_s": [2, 7, 8], "134217728": [2, 7, 8], "forward_ratio": [2, 7, 8], "block_siz": [2, 7, 8], "8388608": [2, 7, 8], "limited_seek": [2, 7, 8], "share_cache_kei": [2, 7, 8], "bufferedwrit": [2, 7, 8], "s3memoryhandl": [2, 7, 8], "asynchron": [2, 7, 8], "prefetch": [2, 7, 8], "reader": [2, 7, 8, 9, 13], "fast": [2, 7, 8], "sequenti": [2, 7, 8], "sure": [2, 7, 8], "writer": [2, 7, 8, 13], "correctli": [2, 7, 8], "context": [2, 7, 8], "manag": [2, 7, 8], "some": [2, 7, 8], "mai": [2, 7, 8, 9, 13], "well": [2, 7, 8, 13], "10": [2, 5, 6, 7, 8, 9], "20": [2, 7, 8], "max_block_s": [2, 7, 8], "8": [2, 7, 8], "16": [2, 7, 8], "mb": [2, 7, 8], "global": [2, 7, 8], "pool": [2, 7, 8], "max": [2, 7, 8], "download": [2, 7, 8], "cach": [2, 7, 8, 9], "128mb": [2, 7, 8], "singl": [2, 7, 8], "block": [2, 7, 8], "8mb": [2, 7, 8], "handl": [2, 7, 8, 13], "limit": [2, 7, 8], "both": [2, 7, 8], "head": [2, 7, 8], "tail": [2, 7, 8], "valid": [2, 7, 8], "arbitrari": [2, 7, 8], "s3cachedhandl": [2, 7, 8], "local": [2, 7, 8, 13], "frequent": [2, 7, 8], "random": [2, 7, 8], "could": [2, 7, 8], "better": [2, 7, 8], "ssd": [2, 7, 8], "tmpf": [2, 7, 8], "ab": [2, 7, 8], "filesystem": [2, 7, 8], "either": [2, 7, 8], "stop": [2, 7, 8, 9], "rang": [2, 7, 8, 9], "concat": [2, 7, 8, 9], "2": [2, 7, 8, 9], "ignor": [2, 7, 8, 9], "left": [2, 7, 8, 9], "side": [2, 7, 8, 9], "slash": [2, 7, 8, 9], "indic": [2, 7, 8, 9], "directli": [2, 7, 8, 9, 13], "join_thread": [2, 7, 8], "s3pipehandl": [2, 7, 8], "while": [2, 7, 8], "wait": [2, 7, 8], "until": [2, 7, 8], "finish": [2, 7, 8], "affect": [2, 7, 8], "speed": [2, 7, 8], "up": [2, 7, 8, 13], "But": [2, 7, 8, 9], "behaviour": [2, 7, 8], "successfulli": [2, 7, 8], "execut": [2, 7, 8], "caus": [2, 7, 8], "exhaust": [2, 7, 8], "after": [2, 7, 8], "bucketread": [2, 9], "bucketwrit": [2, 9], "s3_cacher": [2, 9], "posixpath": [2, 9], "cacher": [2, 9], "path_glob": [2, 9], "open_func": [2, 9], "combineread": [2, 9], "unifi": [2, 9, 13], "multi": [2, 9, 13], "shell": [2, 9], "here": [2, 9, 13], "few": [2, 9], "exampl": [2, 9, 13], "tqdm": [2, 9], "import": [2, 9, 13], "bar": [2, 9], "def": [2, 9], "__init__": [2, 9], "self": [2, 9], "_bar": [2, 9], "__call__": [2, 9], "bytes_num": [2, 9], "updat": [2, 9], "png": [2, 9], "test1": [2, 9], "856960it": [2, 9], "260592384": [2, 9], "24it": [2, 9], "notadirectoryerror": [2, 9], "actual": [2, 9], "check": [2, 9, 13], "permissionerror": [2, 9], "encod": [2, 9], "error": [2, 9, 13], "On": [2, 9], "kei": [2, 7, 8, 9, 13], "besid": [2, 9], "mention": [2, 9], "consid": [2, 9], "cv2": [2, 9], "numpi": [2, 9], "np": [2, 9], "raw": [2, 9], "ss2": [2, 9], "bdstatic": [2, 9], "com": [2, 9, 13], "70cfvnsh_q1ynxgkpowk1hf6hhi": [2, 9], "u": [2, 9, 13], "2275743969": [2, 9], "3715493841": [2, 9], "fm": [2, 9], "26": [2, 9], "gp": [2, 9], "jpg": [2, 9], "img": [2, 9], "imdecod": [2, 9], "frombuff": [2, 9], "uint8": [2, 9], "imread_anydepth": [2, 9], "imread_color": [2, 9], "rwa": [2, 9], "tb": [2, 9], "necessari": [2, 9], "isadirectoryerror": [2, 9], "valueerror": [2, 9], "uri": [2, 9], "exactli": [2, 9], "text": [2, 9], "bahav": [2, 9], "level": [2, 9], "lock": [2, 9, 13], "total_fil": [2, 9], "_total_fil": [2, 9], "_now": [2, 9], "_file_index": [2, 9], "_lock": [2, 9], "num_byt": [2, 9], "1": [2, 7, 8, 9], "print": [2, 9], "len": [2, 9], "new": [2, 7, 8, 9, 13], "appli": [2, 9], "unsupport": [2, 9], "content": [3, 4, 5, 6, 7, 8, 9, 10], "ctime": [3, 4], "extra": [3, 4], "timeout": [5, 6], "status_forcelist": [5, 6], "502": [5, 6], "503": [5, 6], "504": [5, 6], "scheme": [5, 6, 11, 12], "definit": [5, 6, 11, 12], "domain": [5, 6], "s3_client": [7, 8], "max_work": [7, 8], "writabl": [7, 8], "posit": [7, 8], "filecach": [7, 8], "head_block_s": [7, 8], "tail_block_s": [7, 8], "seekabl": [7, 8], "msgpack": [7, 8], "mp4": [7, 8, 13], "pain": [7, 8], "you": [7, 8, 13], "need": [7, 8, 13], "befor": [7, 8, 13], "so": [7, 8], "kind": [7, 8], "hard": [7, 8], "unseek": [7, 8], "case": [7, 8, 13], "we": [7, 8, 13], "come": [7, 8], "back": [7, 8], "again": [7, 8], "second": [7, 8], "offset": [7, 8], "whenc": [7, 8], "chang": [7, 8, 13], "cooki": [7, 8], "neg": [7, 8], "end": [7, 8], "usual": [7, 8], "block_capac": [7, 8], "block_forward": [7, 8], "max_retri": [7, 8], "divid": [7, 8], "lru": [7, 8], "most": [7, 8, 13], "trigger": [7, 8], "eof": [7, 8], "reach": [7, 8], "bytearrai": [7, 8], "next": [7, 8], "retain": [7, 8], "newlin": [7, 8], "maximum": [7, 8], "incomplet": [7, 8], "po": [7, 8], "32": [7, 8], "cache_kei": [7, 8], "endpoint": [7, 8], "config": [7, 8, 13], "session": [7, 8], "src_protocol": 9, "dst_protocol": 9, "copy_func": 9, "func": 9, "duplic": 9, "registr": 9, "its": 9, "doc": 13, "research": 13, "provid": 13, "silki": 13, "oper": 13, "experi": 13, "backend": 13, "enabl": 13, "focu": 13, "logic": 13, "your": 13, "own": 13, "project": 13, "question": 13, "almost": 13, "easili": 13, "boundari": 13, "even": 13, "difficult": 13, "think": 13, "condit": 13, "help": 13, "perfect": 13, "hint": 13, "built": 13, "document": 13, "enjoi": 13, "id": 13, "auto": 13, "semant": 13, "upgrad": 13, "guid": 13, "featur": 13, "advantag": 13, "resourc": 13, "variou": 13, "especi": 13, "faster": 13, "than": 13, "known": 13, "competitor": 13, "avail": 13, "And": 13, "zsh": 13, "extend": 13, "syntax": 13, "video": 13, "avi": 13, "inclus": 13, "find": 13, "want": 13, "submit": 13, "issu": 13, "compat": 13, "pathlib": 13, "final": 13, "playground": 13, "w": 13, "fp": 13, "silver": 13, "bullet": 13, "tmp": 13, "also": 13, "www": 13, "googl": 13, "7": 13, "assert": 13, "see": 13, "what": 13, "pip3": 13, "git": 13, "clone": 13, "cd": 13, "dev": 13, "authent": 13, "credenti": 13, "account": 13, "edit": 13, "boto3": 13, "accesskei": 13, "secret": 13, "secretkei": 13, "region": 13, "output": 13, "aliyun": 13, "addressing_styl": 13, "virtual": 13, "endpoint_url": 13, "cn": 13, "hangzhou": 13, "aliyunc": 13, "aws_secret_access_kei": 13, "aws_access_key_id": 13, "welcom": 13, "everyon": 13, "code": 13, "meet": 13, "much": 13, "possibl": 13, "member": 13, "evalu": 13, "assist": 13, "yapf": 13, "lint": 13, "tool": 13, "27": 13, "futur": 13, "pytyp": 13, "fail": 13, "disabl": 13, "xxx": 13, "pleas": 13, "why": 13, "variabl": 13, "annat": 13, "introduc": 13, "py36": 13, "cannot": 13, "unit": 13, "coverag": 13, "pyfakef": 13, "moto": 13, "newli": 13, "ad": 13, "correct": 13, "improv": 13, "mani": 13, "wai": 13, "report": 13, "investig": 13, "bug": 13, "problem": 13, "suggest": 13, "issus": 13, "repli": 13, "soon": 13, "adopt": 13, "review": 13, "pull": 13, "repo": 13, "recommend": 13, "friend": 13, "form": 13}, "objects": {"": [[2, 0, 0, "-", "megfile"]], "megfile": [[2, 1, 1, "", "FSPath"], [2, 1, 1, "", "HttpPath"], [2, 1, 1, "", "HttpsPath"], [2, 1, 1, "", "S3Path"], [2, 1, 1, "", "SmartPath"], [2, 1, 1, "", "StdioPath"], [3, 0, 0, "-", "fs"], [2, 5, 1, "", "fs_abspath"], [2, 5, 1, "", "fs_access"], [2, 5, 1, "", "fs_cwd"], [2, 5, 1, "", "fs_exists"], [2, 5, 1, "", "fs_expanduser"], [2, 5, 1, "", "fs_getmd5"], [2, 5, 1, "", "fs_getmtime"], [2, 5, 1, "", "fs_getsize"], [2, 5, 1, "", "fs_glob"], [2, 5, 1, "", "fs_glob_stat"], [2, 5, 1, "", "fs_home"], [2, 5, 1, "", "fs_iglob"], [2, 5, 1, "", "fs_isabs"], [2, 5, 1, "", "fs_isdir"], [2, 5, 1, "", "fs_isfile"], [2, 5, 1, "", "fs_islink"], [2, 5, 1, "", "fs_ismount"], [2, 5, 1, "", "fs_listdir"], [2, 5, 1, "", "fs_load_from"], [2, 5, 1, "", "fs_makedirs"], [2, 5, 1, "", "fs_move"], [4, 0, 0, "-", "fs_path"], [2, 5, 1, "", "fs_readlink"], [2, 5, 1, "", "fs_realpath"], [2, 5, 1, "", "fs_relpath"], [2, 5, 1, "", "fs_remove"], [2, 5, 1, "", "fs_rename"], [2, 5, 1, "", "fs_resolve"], [2, 5, 1, "", "fs_save_as"], [2, 5, 1, "", "fs_scan"], [2, 5, 1, "", "fs_scan_stat"], [2, 5, 1, "", "fs_scandir"], [2, 5, 1, "", "fs_stat"], [2, 5, 1, "", "fs_symlink"], [2, 5, 1, "", "fs_sync"], [2, 5, 1, "", "fs_unlink"], [2, 5, 1, "", "fs_walk"], [5, 0, 0, "-", "http"], [6, 0, 0, "-", "http_path"], [2, 5, 1, "", "is_fs"], [2, 5, 1, "", "is_s3"], [7, 0, 0, "-", "s3"], [2, 5, 1, "", "s3_access"], [2, 5, 1, "", "s3_buffered_open"], [2, 5, 1, "", "s3_cached_open"], [2, 5, 1, "", "s3_copy"], [2, 5, 1, "", "s3_download"], [2, 5, 1, "", "s3_exists"], [2, 5, 1, "", "s3_getmd5"], [2, 5, 1, "", "s3_getmtime"], [2, 5, 1, "", "s3_getsize"], [2, 5, 1, "", "s3_glob"], [2, 5, 1, "", "s3_glob_stat"], [2, 5, 1, "", "s3_hasbucket"], [2, 5, 1, "", "s3_iglob"], [2, 5, 1, "", "s3_isdir"], [2, 5, 1, "", "s3_isfile"], [2, 5, 1, "", "s3_legacy_open"], [2, 5, 1, "", "s3_listdir"], [2, 5, 1, "", "s3_load_content"], [2, 5, 1, "", "s3_load_from"], [2, 5, 1, "", "s3_makedirs"], [2, 5, 1, "", "s3_memory_open"], [2, 5, 1, "", "s3_move"], [2, 5, 1, "", "s3_open"], [8, 0, 0, "-", "s3_path"], [2, 5, 1, "", "s3_path_join"], [2, 5, 1, "", "s3_pipe_open"], [2, 5, 1, "", "s3_prefetch_open"], [2, 5, 1, "", "s3_readlink"], [2, 5, 1, "", "s3_remove"], [2, 5, 1, "", "s3_rename"], [2, 5, 1, "", "s3_save_as"], [2, 5, 1, "", "s3_scan"], [2, 5, 1, "", "s3_scan_stat"], [2, 5, 1, "", "s3_scandir"], [2, 5, 1, "", "s3_stat"], [2, 5, 1, "", "s3_symlink"], [2, 5, 1, "", "s3_sync"], [2, 5, 1, "", "s3_unlink"], [2, 5, 1, "", "s3_upload"], [2, 5, 1, "", "s3_walk"], [9, 0, 0, "-", "smart"], [2, 5, 1, "", "smart_access"], [2, 5, 1, "", "smart_cache"], [2, 5, 1, "", "smart_combine_open"], [2, 5, 1, "", "smart_copy"], [2, 5, 1, "", "smart_exists"], [2, 5, 1, "", "smart_getmd5"], [2, 5, 1, "", "smart_getmtime"], [2, 5, 1, "", "smart_getsize"], [2, 5, 1, "", "smart_glob"], [2, 5, 1, "", "smart_glob_stat"], [2, 5, 1, "", "smart_iglob"], [2, 5, 1, "", "smart_isdir"], [2, 5, 1, "", "smart_isfile"], [2, 5, 1, "", "smart_islink"], [2, 5, 1, "", "smart_listdir"], [2, 5, 1, "", "smart_load_content"], [2, 5, 1, "", "smart_load_from"], [2, 5, 1, "", "smart_load_text"], [2, 5, 1, "", "smart_makedirs"], [2, 5, 1, "", "smart_move"], [2, 5, 1, "", "smart_open"], [10, 0, 0, "-", "smart_path"], [2, 5, 1, "", "smart_path_join"], [2, 5, 1, "", "smart_readlink"], [2, 5, 1, "", "smart_realpath"], [2, 5, 1, "", "smart_remove"], [2, 5, 1, "", "smart_rename"], [2, 5, 1, "", "smart_save_as"], [2, 5, 1, "", "smart_save_content"], [2, 5, 1, "", "smart_save_text"], [2, 5, 1, "", "smart_scan"], [2, 5, 1, "", "smart_scan_stat"], [2, 5, 1, "", "smart_scandir"], [2, 5, 1, "", "smart_stat"], [2, 5, 1, "", "smart_symlink"], [2, 5, 1, "", "smart_sync"], [2, 5, 1, "", "smart_touch"], [2, 5, 1, "", "smart_unlink"], [2, 5, 1, "", "smart_walk"], [11, 0, 0, "-", "stdio"], [12, 0, 0, "-", "stdio_path"]], "megfile.FSPath": [[2, 2, 1, "", "abspath"], [2, 2, 1, "", "access"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "cwd"], [2, 2, 1, "", "exists"], [2, 2, 1, "", "expanduser"], [2, 2, 1, "", "from_uri"], [2, 2, 1, "", "getmtime"], [2, 2, 1, "", "getsize"], [2, 2, 1, "", "glob"], [2, 2, 1, "", "glob_stat"], [2, 2, 1, "", "home"], [2, 2, 1, "", "iglob"], [2, 2, 1, "", "is_absolute"], [2, 2, 1, "", "is_dir"], [2, 2, 1, "", "is_file"], [2, 2, 1, "", "is_mount"], [2, 2, 1, "", "is_symlink"], [2, 2, 1, "", "joinpath"], [2, 2, 1, "", "listdir"], [2, 2, 1, "", "load"], [2, 2, 1, "", "md5"], [2, 2, 1, "", "mkdir"], [2, 2, 1, "", "open"], [2, 3, 1, "", "path_with_protocol"], [2, 4, 1, "", "protocol"], [2, 2, 1, "", "readlink"], [2, 2, 1, "", "realpath"], [2, 2, 1, "", "relpath"], [2, 2, 1, "", "remove"], [2, 2, 1, "", "rename"], [2, 2, 1, "", "replace"], [2, 2, 1, "", "resolve"], [2, 2, 1, "", "save"], [2, 2, 1, "", "scan"], [2, 2, 1, "", "scan_stat"], [2, 2, 1, "", "scandir"], [2, 2, 1, "", "stat"], [2, 2, 1, "", "symlink"], [2, 2, 1, "", "sync"], [2, 2, 1, "", "unlink"], [2, 2, 1, "", "walk"]], "megfile.HttpPath": [[2, 2, 1, "", "getmtime"], [2, 2, 1, "", "getsize"], [2, 2, 1, "", "open"], [2, 4, 1, "", "protocol"], [2, 2, 1, "", "stat"]], "megfile.HttpsPath": [[2, 4, 1, "", "protocol"]], "megfile.S3Path": [[2, 2, 1, "", "access"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "exists"], [2, 2, 1, "", "getmtime"], [2, 2, 1, "", "getsize"], [2, 2, 1, "", "glob"], [2, 2, 1, "", "glob_stat"], [2, 2, 1, "", "hasbucket"], [2, 2, 1, "", "iglob"], [2, 2, 1, "", "is_dir"], [2, 2, 1, "", "is_file"], [2, 2, 1, "", "is_symlink"], [2, 2, 1, "", "listdir"], [2, 2, 1, "", "load"], [2, 2, 1, "", "md5"], [2, 2, 1, "", "mkdir"], [2, 2, 1, "", "move"], [2, 2, 1, "", "open"], [2, 4, 1, "", "protocol"], [2, 2, 1, "", "readlink"], [2, 2, 1, "", "remove"], [2, 2, 1, "", "rename"], [2, 2, 1, "", "save"], [2, 2, 1, "", "scan"], [2, 2, 1, "", "scan_stat"], [2, 2, 1, "", "scandir"], [2, 2, 1, "", "stat"], [2, 2, 1, "", "symlink"], [2, 2, 1, "", "sync"], [2, 2, 1, "", "unlink"], [2, 2, 1, "", "walk"]], "megfile.SmartPath": [[2, 2, 1, "", "abspath"], [2, 2, 1, "", "access"], [2, 3, 1, "", "anchor"], [2, 2, 1, "", "as_posix"], [2, 2, 1, "", "as_uri"], [2, 3, 1, "", "drive"], [2, 2, 1, "", "exists"], [2, 2, 1, "", "from_uri"], [2, 2, 1, "", "getmtime"], [2, 2, 1, "", "getsize"], [2, 2, 1, "", "glob"], [2, 2, 1, "", "glob_stat"], [2, 2, 1, "", "iglob"], [2, 2, 1, "", "is_absolute"], [2, 2, 1, "", "is_dir"], [2, 2, 1, "", "is_file"], [2, 2, 1, "", "is_mount"], [2, 2, 1, "", "is_reserved"], [2, 2, 1, "", "is_symlink"], [2, 2, 1, "", "joinpath"], [2, 2, 1, "", "listdir"], [2, 2, 1, "", "load"], [2, 2, 1, "", "match"], [2, 2, 1, "", "md5"], [2, 2, 1, "", "mkdir"], [2, 3, 1, "", "name"], [2, 2, 1, "", "open"], [2, 3, 1, "", "parent"], [2, 3, 1, "", "parents"], [2, 3, 1, "", "parts"], [2, 3, 1, "", "protocol"], [2, 2, 1, "", "readlink"], [2, 2, 1, "", "realpath"], [2, 2, 1, "", "register"], [2, 2, 1, "", "relative_to"], [2, 2, 1, "", "relpath"], [2, 2, 1, "", "remove"], [2, 2, 1, "", "rename"], [2, 2, 1, "", "replace"], [2, 3, 1, "", "root"], [2, 2, 1, "", "save"], [2, 2, 1, "", "scan"], [2, 2, 1, "", "scan_stat"], [2, 2, 1, "", "scandir"], [2, 2, 1, "", "stat"], [2, 3, 1, "", "stem"], [2, 3, 1, "", "suffix"], [2, 3, 1, "", "suffixes"], [2, 2, 1, "", "symlink"], [2, 2, 1, "", "touch"], [2, 2, 1, "", "unlink"], [2, 2, 1, "", "walk"], [2, 2, 1, "", "with_name"], [2, 2, 1, "", "with_suffix"]], "megfile.StdioPath": [[2, 2, 1, "", "open"], [2, 4, 1, "", "protocol"]], "megfile.fs": [[3, 1, 1, "", "FSPath"], [3, 1, 1, "", "StatResult"], [3, 5, 1, "", "fs_abspath"], [3, 5, 1, "", "fs_access"], [3, 5, 1, "", "fs_copy"], [3, 5, 1, "", "fs_cwd"], [3, 5, 1, "", "fs_exists"], [3, 5, 1, "", "fs_expanduser"], [3, 5, 1, "", "fs_getmd5"], [3, 5, 1, "", "fs_getmtime"], [3, 5, 1, "", "fs_getsize"], [3, 5, 1, "", "fs_glob"], [3, 5, 1, "", "fs_glob_stat"], [3, 5, 1, "", "fs_home"], [3, 5, 1, "", "fs_iglob"], [3, 5, 1, "", "fs_isabs"], [3, 5, 1, "", "fs_isdir"], [3, 5, 1, "", "fs_isfile"], [3, 5, 1, "", "fs_islink"], [3, 5, 1, "", "fs_ismount"], [3, 5, 1, "", "fs_listdir"], [3, 5, 1, "", "fs_load_from"], [3, 5, 1, "", "fs_makedirs"], [3, 5, 1, "", "fs_move"], [3, 5, 1, "", "fs_path_join"], [3, 5, 1, "", "fs_readlink"], [3, 5, 1, "", "fs_realpath"], [3, 5, 1, "", "fs_relpath"], [3, 5, 1, "", "fs_remove"], [3, 5, 1, "", "fs_rename"], [3, 5, 1, "", "fs_resolve"], [3, 5, 1, "", "fs_save_as"], [3, 5, 1, "", "fs_scan"], [3, 5, 1, "", "fs_scan_stat"], [3, 5, 1, "", "fs_scandir"], [3, 5, 1, "", "fs_stat"], [3, 5, 1, "", "fs_symlink"], [3, 5, 1, "", "fs_sync"], [3, 5, 1, "", "fs_unlink"], [3, 5, 1, "", "fs_walk"], [3, 5, 1, "", "is_fs"]], "megfile.fs.FSPath": [[3, 2, 1, "", "abspath"], [3, 2, 1, "", "access"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "cwd"], [3, 2, 1, "", "exists"], [3, 2, 1, "", "expanduser"], [3, 2, 1, "", "from_uri"], [3, 2, 1, "", "getmtime"], [3, 2, 1, "", "getsize"], [3, 2, 1, "", "glob"], [3, 2, 1, "", "glob_stat"], [3, 2, 1, "", "home"], [3, 2, 1, "", "iglob"], [3, 2, 1, "", "is_absolute"], [3, 2, 1, "", "is_dir"], [3, 2, 1, "", "is_file"], [3, 2, 1, "", "is_mount"], [3, 2, 1, "", "is_symlink"], [3, 2, 1, "", "joinpath"], [3, 2, 1, "", "listdir"], [3, 2, 1, "", "load"], [3, 2, 1, "", "md5"], [3, 2, 1, "", "mkdir"], [3, 2, 1, "", "open"], [3, 3, 1, "", "path_with_protocol"], [3, 4, 1, "", "protocol"], [3, 2, 1, "", "readlink"], [3, 2, 1, "", "realpath"], [3, 2, 1, "", "relpath"], [3, 2, 1, "", "remove"], [3, 2, 1, "", "rename"], [3, 2, 1, "", "replace"], [3, 2, 1, "", "resolve"], [3, 2, 1, "", "save"], [3, 2, 1, "", "scan"], [3, 2, 1, "", "scan_stat"], [3, 2, 1, "", "scandir"], [3, 2, 1, "", "stat"], [3, 2, 1, "", "symlink"], [3, 2, 1, "", "sync"], [3, 2, 1, "", "unlink"], [3, 2, 1, "", "walk"]], "megfile.fs.StatResult": [[3, 2, 1, "", "is_dir"], [3, 2, 1, "", "is_file"], [3, 2, 1, "", "is_symlink"]], "megfile.fs_path": [[4, 1, 1, "", "FSPath"], [4, 1, 1, "", "StatResult"], [4, 5, 1, "", "fs_path_join"], [4, 5, 1, "", "is_fs"]], "megfile.fs_path.FSPath": [[4, 2, 1, "", "abspath"], [4, 2, 1, "", "access"], [4, 2, 1, "", "copy"], [4, 2, 1, "", "cwd"], [4, 2, 1, "", "exists"], [4, 2, 1, "", "expanduser"], [4, 2, 1, "", "from_uri"], [4, 2, 1, "", "getmtime"], [4, 2, 1, "", "getsize"], [4, 2, 1, "", "glob"], [4, 2, 1, "", "glob_stat"], [4, 2, 1, "", "home"], [4, 2, 1, "", "iglob"], [4, 2, 1, "", "is_absolute"], [4, 2, 1, "", "is_dir"], [4, 2, 1, "", "is_file"], [4, 2, 1, "", "is_mount"], [4, 2, 1, "", "is_symlink"], [4, 2, 1, "", "joinpath"], [4, 2, 1, "", "listdir"], [4, 2, 1, "", "load"], [4, 2, 1, "", "md5"], [4, 2, 1, "", "mkdir"], [4, 2, 1, "", "open"], [4, 3, 1, "", "path_with_protocol"], [4, 4, 1, "", "protocol"], [4, 2, 1, "", "readlink"], [4, 2, 1, "", "realpath"], [4, 2, 1, "", "relpath"], [4, 2, 1, "", "remove"], [4, 2, 1, "", "rename"], [4, 2, 1, "", "replace"], [4, 2, 1, "", "resolve"], [4, 2, 1, "", "save"], [4, 2, 1, "", "scan"], [4, 2, 1, "", "scan_stat"], [4, 2, 1, "", "scandir"], [4, 2, 1, "", "stat"], [4, 2, 1, "", "symlink"], [4, 2, 1, "", "sync"], [4, 2, 1, "", "unlink"], [4, 2, 1, "", "walk"]], "megfile.fs_path.StatResult": [[4, 2, 1, "", "is_dir"], [4, 2, 1, "", "is_file"], [4, 2, 1, "", "is_symlink"]], "megfile.http": [[5, 1, 1, "", "HttpPath"], [5, 1, 1, "", "HttpsPath"], [5, 5, 1, "", "get_http_session"], [5, 5, 1, "", "http_getmtime"], [5, 5, 1, "", "http_getsize"], [5, 5, 1, "", "http_open"], [5, 5, 1, "", "http_stat"], [5, 5, 1, "", "is_http"]], "megfile.http.HttpPath": [[5, 2, 1, "", "getmtime"], [5, 2, 1, "", "getsize"], [5, 2, 1, "", "open"], [5, 4, 1, "", "protocol"], [5, 2, 1, "", "stat"]], "megfile.http.HttpsPath": [[5, 4, 1, "", "protocol"]], "megfile.http_path": [[6, 1, 1, "", "HttpPath"], [6, 1, 1, "", "HttpsPath"], [6, 5, 1, "", "get_http_session"], [6, 5, 1, "", "is_http"]], "megfile.http_path.HttpPath": [[6, 2, 1, "", "getmtime"], [6, 2, 1, "", "getsize"], [6, 2, 1, "", "open"], [6, 4, 1, "", "protocol"], [6, 2, 1, "", "stat"]], "megfile.http_path.HttpsPath": [[6, 4, 1, "", "protocol"]], "megfile.s3": [[7, 1, 1, "", "S3BufferedWriter"], [7, 1, 1, "", "S3Cacher"], [7, 1, 1, "", "S3LimitedSeekableWriter"], [7, 1, 1, "", "S3Path"], [7, 1, 1, "", "S3PrefetchReader"], [7, 1, 1, "", "S3ShareCacheReader"], [7, 5, 1, "", "get_endpoint_url"], [7, 5, 1, "", "get_s3_client"], [7, 5, 1, "", "get_s3_session"], [7, 5, 1, "", "is_s3"], [7, 5, 1, "", "parse_s3_url"], [7, 5, 1, "", "s3_access"], [7, 5, 1, "", "s3_buffered_open"], [7, 5, 1, "", "s3_cached_open"], [7, 5, 1, "", "s3_copy"], [7, 5, 1, "", "s3_download"], [7, 5, 1, "", "s3_exists"], [7, 5, 1, "", "s3_getmd5"], [7, 5, 1, "", "s3_getmtime"], [7, 5, 1, "", "s3_getsize"], [7, 5, 1, "", "s3_glob"], [7, 5, 1, "", "s3_glob_stat"], [7, 5, 1, "", "s3_hasbucket"], [7, 5, 1, "", "s3_iglob"], [7, 5, 1, "", "s3_isdir"], [7, 5, 1, "", "s3_isfile"], [7, 5, 1, "", "s3_islink"], [7, 5, 1, "", "s3_legacy_open"], [7, 5, 1, "", "s3_listdir"], [7, 5, 1, "", "s3_load_content"], [7, 5, 1, "", "s3_load_from"], [7, 5, 1, "", "s3_makedirs"], [7, 5, 1, "", "s3_memory_open"], [7, 5, 1, "", "s3_move"], [7, 5, 1, "", "s3_open"], [7, 5, 1, "", "s3_path_join"], [7, 5, 1, "", "s3_pipe_open"], [7, 5, 1, "", "s3_prefetch_open"], [7, 5, 1, "", "s3_readlink"], [7, 5, 1, "", "s3_remove"], [7, 5, 1, "", "s3_rename"], [7, 5, 1, "", "s3_save_as"], [7, 5, 1, "", "s3_scan"], [7, 5, 1, "", "s3_scan_stat"], [7, 5, 1, "", "s3_scandir"], [7, 5, 1, "", "s3_share_cache_open"], [7, 5, 1, "", "s3_stat"], [7, 5, 1, "", "s3_symlink"], [7, 5, 1, "", "s3_sync"], [7, 5, 1, "", "s3_unlink"], [7, 5, 1, "", "s3_upload"], [7, 5, 1, "", "s3_walk"]], "megfile.s3.S3BufferedWriter": [[7, 3, 1, "", "mode"], [7, 3, 1, "", "name"], [7, 2, 1, "", "tell"], [7, 2, 1, "", "write"]], "megfile.s3.S3Cacher": [[7, 4, 1, "", "cache_path"]], "megfile.s3.S3LimitedSeekableWriter": [[7, 2, 1, "", "seek"], [7, 2, 1, "", "write"]], "megfile.s3.S3Path": [[7, 2, 1, "", "access"], [7, 2, 1, "", "copy"], [7, 2, 1, "", "exists"], [7, 2, 1, "", "getmtime"], [7, 2, 1, "", "getsize"], [7, 2, 1, "", "glob"], [7, 2, 1, "", "glob_stat"], [7, 2, 1, "", "hasbucket"], [7, 2, 1, "", "iglob"], [7, 2, 1, "", "is_dir"], [7, 2, 1, "", "is_file"], [7, 2, 1, "", "is_symlink"], [7, 2, 1, "", "listdir"], [7, 2, 1, "", "load"], [7, 2, 1, "", "md5"], [7, 2, 1, "", "mkdir"], [7, 2, 1, "", "move"], [7, 2, 1, "", "open"], [7, 4, 1, "", "protocol"], [7, 2, 1, "", "readlink"], [7, 2, 1, "", "remove"], [7, 2, 1, "", "rename"], [7, 2, 1, "", "save"], [7, 2, 1, "", "scan"], [7, 2, 1, "", "scan_stat"], [7, 2, 1, "", "scandir"], [7, 2, 1, "", "stat"], [7, 2, 1, "", "symlink"], [7, 2, 1, "", "sync"], [7, 2, 1, "", "unlink"], [7, 2, 1, "", "walk"]], "megfile.s3.S3PrefetchReader": [[7, 3, 1, "", "mode"], [7, 3, 1, "", "name"], [7, 2, 1, "", "read"], [7, 2, 1, "", "readinto"], [7, 2, 1, "", "readline"], [7, 2, 1, "", "seek"], [7, 2, 1, "", "tell"]], "megfile.s3_path": [[8, 1, 1, "", "S3BufferedWriter"], [8, 1, 1, "", "S3Cacher"], [8, 1, 1, "", "S3LimitedSeekableWriter"], [8, 1, 1, "", "S3Path"], [8, 1, 1, "", "S3PrefetchReader"], [8, 1, 1, "", "S3ShareCacheReader"], [8, 5, 1, "", "get_endpoint_url"], [8, 5, 1, "", "get_s3_client"], [8, 5, 1, "", "get_s3_session"], [8, 5, 1, "", "is_s3"], [8, 5, 1, "", "parse_s3_url"], [8, 5, 1, "", "s3_buffered_open"], [8, 5, 1, "", "s3_cached_open"], [8, 5, 1, "", "s3_download"], [8, 5, 1, "", "s3_legacy_open"], [8, 5, 1, "", "s3_load_content"], [8, 5, 1, "", "s3_memory_open"], [8, 5, 1, "", "s3_open"], [8, 5, 1, "", "s3_path_join"], [8, 5, 1, "", "s3_pipe_open"], [8, 5, 1, "", "s3_prefetch_open"], [8, 5, 1, "", "s3_share_cache_open"], [8, 5, 1, "", "s3_upload"]], "megfile.s3_path.S3BufferedWriter": [[8, 3, 1, "", "mode"], [8, 3, 1, "", "name"], [8, 2, 1, "", "tell"], [8, 2, 1, "", "write"]], "megfile.s3_path.S3Cacher": [[8, 4, 1, "", "cache_path"]], "megfile.s3_path.S3LimitedSeekableWriter": [[8, 2, 1, "", "seek"], [8, 2, 1, "", "write"]], "megfile.s3_path.S3Path": [[8, 2, 1, "", "access"], [8, 2, 1, "", "copy"], [8, 2, 1, "", "exists"], [8, 2, 1, "", "getmtime"], [8, 2, 1, "", "getsize"], [8, 2, 1, "", "glob"], [8, 2, 1, "", "glob_stat"], [8, 2, 1, "", "hasbucket"], [8, 2, 1, "", "iglob"], [8, 2, 1, "", "is_dir"], [8, 2, 1, "", "is_file"], [8, 2, 1, "", "is_symlink"], [8, 2, 1, "", "listdir"], [8, 2, 1, "", "load"], [8, 2, 1, "", "md5"], [8, 2, 1, "", "mkdir"], [8, 2, 1, "", "move"], [8, 2, 1, "", "open"], [8, 4, 1, "", "protocol"], [8, 2, 1, "", "readlink"], [8, 2, 1, "", "remove"], [8, 2, 1, "", "rename"], [8, 2, 1, "", "save"], [8, 2, 1, "", "scan"], [8, 2, 1, "", "scan_stat"], [8, 2, 1, "", "scandir"], [8, 2, 1, "", "stat"], [8, 2, 1, "", "symlink"], [8, 2, 1, "", "sync"], [8, 2, 1, "", "unlink"], [8, 2, 1, "", "walk"]], "megfile.s3_path.S3PrefetchReader": [[8, 3, 1, "", "mode"], [8, 3, 1, "", "name"], [8, 2, 1, "", "read"], [8, 2, 1, "", "readinto"], [8, 2, 1, "", "readline"], [8, 2, 1, "", "seek"], [8, 2, 1, "", "tell"]], "megfile.smart": [[9, 5, 1, "", "register_copy_func"], [9, 5, 1, "", "smart_abspath"], [9, 5, 1, "", "smart_access"], [9, 5, 1, "", "smart_cache"], [9, 5, 1, "", "smart_combine_open"], [9, 5, 1, "", "smart_copy"], [9, 5, 1, "", "smart_exists"], [9, 5, 1, "", "smart_getmd5"], [9, 5, 1, "", "smart_getmtime"], [9, 5, 1, "", "smart_getsize"], [9, 5, 1, "", "smart_glob"], [9, 5, 1, "", "smart_glob_stat"], [9, 5, 1, "", "smart_iglob"], [9, 5, 1, "", "smart_isabs"], [9, 5, 1, "", "smart_isdir"], [9, 5, 1, "", "smart_isfile"], [9, 5, 1, "", "smart_islink"], [9, 5, 1, "", "smart_ismount"], [9, 5, 1, "", "smart_listdir"], [9, 5, 1, "", "smart_load_content"], [9, 5, 1, "", "smart_load_from"], [9, 5, 1, "", "smart_load_text"], [9, 5, 1, "", "smart_makedirs"], [9, 5, 1, "", "smart_move"], [9, 5, 1, "", "smart_open"], [9, 5, 1, "", "smart_path_join"], [9, 5, 1, "", "smart_readlink"], [9, 5, 1, "", "smart_realpath"], [9, 5, 1, "", "smart_relpath"], [9, 5, 1, "", "smart_remove"], [9, 5, 1, "", "smart_rename"], [9, 5, 1, "", "smart_save_as"], [9, 5, 1, "", "smart_save_content"], [9, 5, 1, "", "smart_save_text"], [9, 5, 1, "", "smart_scan"], [9, 5, 1, "", "smart_scan_stat"], [9, 5, 1, "", "smart_scandir"], [9, 5, 1, "", "smart_stat"], [9, 5, 1, "", "smart_symlink"], [9, 5, 1, "", "smart_sync"], [9, 5, 1, "", "smart_touch"], [9, 5, 1, "", "smart_unlink"], [9, 5, 1, "", "smart_walk"]], "megfile.smart_path": [[10, 1, 1, "", "SmartPath"], [10, 5, 1, "", "get_traditional_path"]], "megfile.smart_path.SmartPath": [[10, 2, 1, "", "abspath"], [10, 2, 1, "", "access"], [10, 3, 1, "", "anchor"], [10, 2, 1, "", "as_posix"], [10, 2, 1, "", "as_uri"], [10, 3, 1, "", "drive"], [10, 2, 1, "", "exists"], [10, 2, 1, "", "from_uri"], [10, 2, 1, "", "getmtime"], [10, 2, 1, "", "getsize"], [10, 2, 1, "", "glob"], [10, 2, 1, "", "glob_stat"], [10, 2, 1, "", "iglob"], [10, 2, 1, "", "is_absolute"], [10, 2, 1, "", "is_dir"], [10, 2, 1, "", "is_file"], [10, 2, 1, "", "is_mount"], [10, 2, 1, "", "is_reserved"], [10, 2, 1, "", "is_symlink"], [10, 2, 1, "", "joinpath"], [10, 2, 1, "", "listdir"], [10, 2, 1, "", "load"], [10, 2, 1, "", "match"], [10, 2, 1, "", "md5"], [10, 2, 1, "", "mkdir"], [10, 3, 1, "", "name"], [10, 2, 1, "", "open"], [10, 3, 1, "", "parent"], [10, 3, 1, "", "parents"], [10, 3, 1, "", "parts"], [10, 3, 1, "", "protocol"], [10, 2, 1, "", "readlink"], [10, 2, 1, "", "realpath"], [10, 2, 1, "", "register"], [10, 2, 1, "", "relative_to"], [10, 2, 1, "", "relpath"], [10, 2, 1, "", "remove"], [10, 2, 1, "", "rename"], [10, 2, 1, "", "replace"], [10, 3, 1, "", "root"], [10, 2, 1, "", "save"], [10, 2, 1, "", "scan"], [10, 2, 1, "", "scan_stat"], [10, 2, 1, "", "scandir"], [10, 2, 1, "", "stat"], [10, 3, 1, "", "stem"], [10, 3, 1, "", "suffix"], [10, 3, 1, "", "suffixes"], [10, 2, 1, "", "symlink"], [10, 2, 1, "", "touch"], [10, 2, 1, "", "unlink"], [10, 2, 1, "", "walk"], [10, 2, 1, "", "with_name"], [10, 2, 1, "", "with_suffix"]], "megfile.stdio": [[11, 1, 1, "", "StdioPath"], [11, 5, 1, "", "is_stdio"], [11, 5, 1, "", "stdio_open"]], "megfile.stdio.StdioPath": [[11, 2, 1, "", "open"], [11, 4, 1, "", "protocol"]], "megfile.stdio_path": [[12, 1, 1, "", "StdioPath"], [12, 5, 1, "", "is_stdio"]], "megfile.stdio_path.StdioPath": [[12, 2, 1, "", "open"], [12, 4, 1, "", "protocol"]], "megfile-cat": [[0, 6, 1, "cmdoption-megfile-cat-arg-PATH", "PATH"]], "megfile-cp": [[0, 6, 1, "cmdoption-megfile-cp-T", "--no-target-directory"], [0, 6, 1, "cmdoption-megfile-cp-r", "--recursive"], [0, 6, 1, "cmdoption-megfile-cp-T", "-T"], [0, 6, 1, "cmdoption-megfile-cp-r", "-r"], [0, 6, 1, "cmdoption-megfile-cp-arg-DST_PATH", "DST_PATH"], [0, 6, 1, "cmdoption-megfile-cp-arg-SRC_PATH", "SRC_PATH"]], "megfile-ls": [[0, 6, 1, "cmdoption-megfile-ls-h", "--human-readable"], [0, 6, 1, "cmdoption-megfile-ls-l", "--long"], [0, 6, 1, "cmdoption-megfile-ls-r", "--recursive"], [0, 6, 1, "cmdoption-megfile-ls-h", "-h"], [0, 6, 1, "cmdoption-megfile-ls-l", "-l"], [0, 6, 1, "cmdoption-megfile-ls-r", "-r"], [0, 6, 1, "cmdoption-megfile-ls-arg-PATH", "PATH"]], "megfile-md5sum": [[0, 6, 1, "cmdoption-megfile-md5sum-arg-PATH", "PATH"]], "megfile-mkdir": [[0, 6, 1, "cmdoption-megfile-mkdir-arg-PATH", "PATH"]], "megfile-mtime": [[0, 6, 1, "cmdoption-megfile-mtime-arg-PATH", "PATH"]], "megfile-mv": [[0, 6, 1, "cmdoption-megfile-mv-T", "--no-target-directory"], [0, 6, 1, "cmdoption-megfile-mv-r", "--recursive"], [0, 6, 1, "cmdoption-megfile-mv-T", "-T"], [0, 6, 1, "cmdoption-megfile-mv-r", "-r"], [0, 6, 1, "cmdoption-megfile-mv-arg-DST_PATH", "DST_PATH"], [0, 6, 1, "cmdoption-megfile-mv-arg-SRC_PATH", "SRC_PATH"]], "megfile-rm": [[0, 6, 1, "cmdoption-megfile-rm-r", "--recursive"], [0, 6, 1, "cmdoption-megfile-rm-r", "-r"], [0, 6, 1, "cmdoption-megfile-rm-arg-PATH", "PATH"]], "megfile-size": [[0, 6, 1, "cmdoption-megfile-size-arg-PATH", "PATH"]], "megfile-stat": [[0, 6, 1, "cmdoption-megfile-stat-arg-PATH", "PATH"]], "megfile-sync": [[0, 6, 1, "cmdoption-megfile-sync-arg-DST_PATH", "DST_PATH"], [0, 6, 1, "cmdoption-megfile-sync-arg-SRC_PATH", "SRC_PATH"]], "megfile-touch": [[0, 6, 1, "cmdoption-megfile-touch-arg-PATH", "PATH"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"command": [0, 13], "line": [0, 13], "interfac": [0, 13], "megfil": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "cat": 0, "cp": 0, "l": 0, "md5sum": 0, "mkdir": 0, "mtime": 0, "mv": 0, "rm": 0, "size": 0, "stat": 0, "sync": 0, "touch": 0, "version": 0, "welcom": 1, "": 1, "document": 1, "content": [1, 2], "indic": 1, "tabl": 1, "api": 2, "refer": 2, "submodul": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "f": 3, "fs_path": 4, "http": 5, "http_path": 6, "s3": 7, "s3_path": 8, "smart": 9, "smart_path": 10, "stdio": 11, "stdio_path": 12, "get": 13, "start": 13, "megvii": 13, "file": 13, "librari": 13, "quick": 13, "function": 13, "smartpath": 13, "instal": 13, "pypi": 13, "build": 13, "from": 13, "sourc": 13, "develop": 13, "environ": 13, "configur": 13, "how": 13, "contribut": 13}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Command Line Interface": [[0, "command-line-interface"], [13, "command-line-interface"]], "megfile": [[0, "megfile"]], "cat": [[0, "megfile-cat"]], "cp": [[0, "megfile-cp"]], "ls": [[0, "megfile-ls"]], "md5sum": [[0, "megfile-md5sum"]], "mkdir": [[0, "megfile-mkdir"]], "mtime": [[0, "megfile-mtime"]], "mv": [[0, "megfile-mv"]], "rm": [[0, "megfile-rm"]], "size": [[0, "megfile-size"]], "stat": [[0, "megfile-stat"]], "sync": [[0, "megfile-sync"]], "touch": [[0, "megfile-touch"]], "version": [[0, "megfile-version"]], "Welcome to megfile\u2019s documentation!": [[1, "welcome-to-megfile-s-documentation"]], "Contents:": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "API Reference": [[2, "api-reference"]], "Submodules": [[2, "submodules"]], "Module contents": [[2, "module-megfile"]], "megfile.fs module": [[3, "module-megfile.fs"]], "megfile.fs_path module": [[4, "module-megfile.fs_path"]], "megfile.http module": [[5, "module-megfile.http"]], "megfile.http_path module": [[6, "module-megfile.http_path"]], "megfile.s3 module": [[7, "module-megfile.s3"]], "megfile.s3_path module": [[8, "module-megfile.s3_path"]], "megfile.smart module": [[9, "module-megfile.smart"]], "megfile.smart_path module": [[10, "module-megfile.smart_path"]], "megfile.stdio module": [[11, "module-megfile.stdio"]], "megfile.stdio_path module": [[12, "module-megfile.stdio_path"]], "Getting Started": [[13, "getting-started"]], "megfile - Megvii FILE library": [[13, "megfile-megvii-file-library"]], "Quick Start": [[13, "quick-start"]], "Functional Interface": [[13, "functional-interface"]], "SmartPath Interface": [[13, "smartpath-interface"]], "Installation": [[13, "installation"]], "PyPI": [[13, "pypi"]], "Build from Source": [[13, "build-from-source"]], "Development Environment": [[13, "development-environment"]], "Configuration": [[13, "configuration"]], "How to Contribute": [[13, "how-to-contribute"]]}, "indexentries": {"--human-readable": [[0, "cmdoption-megfile-ls-h"]], "--long": [[0, "cmdoption-megfile-ls-l"]], "--no-target-directory": [[0, "cmdoption-megfile-cp-T"], [0, "cmdoption-megfile-mv-T"]], "--recursive": [[0, "cmdoption-megfile-cp-r"], [0, "cmdoption-megfile-ls-r"], [0, "cmdoption-megfile-mv-r"], [0, "cmdoption-megfile-rm-r"]], "-t": [[0, "cmdoption-megfile-cp-T"], [0, "cmdoption-megfile-mv-T"]], "-h": [[0, "cmdoption-megfile-ls-h"]], "-l": [[0, "cmdoption-megfile-ls-l"]], "-r": [[0, "cmdoption-megfile-cp-r"], [0, "cmdoption-megfile-ls-r"], [0, "cmdoption-megfile-mv-r"], [0, "cmdoption-megfile-rm-r"]], "dst_path": [[0, "cmdoption-megfile-cp-arg-DST_PATH"], [0, "cmdoption-megfile-mv-arg-DST_PATH"], [0, "cmdoption-megfile-sync-arg-DST_PATH"]], "path": [[0, "cmdoption-megfile-cat-arg-PATH"], [0, "cmdoption-megfile-ls-arg-PATH"], [0, "cmdoption-megfile-md5sum-arg-PATH"], [0, "cmdoption-megfile-mkdir-arg-PATH"], [0, "cmdoption-megfile-mtime-arg-PATH"], [0, "cmdoption-megfile-rm-arg-PATH"], [0, "cmdoption-megfile-size-arg-PATH"], [0, "cmdoption-megfile-stat-arg-PATH"], [0, "cmdoption-megfile-touch-arg-PATH"]], "src_path": [[0, "cmdoption-megfile-cp-arg-SRC_PATH"], [0, "cmdoption-megfile-mv-arg-SRC_PATH"], [0, "cmdoption-megfile-sync-arg-SRC_PATH"]], "megfile-cat command line option": [[0, "cmdoption-megfile-cat-arg-PATH"]], "megfile-cp command line option": [[0, "cmdoption-megfile-cp-T"], [0, "cmdoption-megfile-cp-arg-DST_PATH"], [0, "cmdoption-megfile-cp-arg-SRC_PATH"], [0, "cmdoption-megfile-cp-r"]], "megfile-ls command line option": [[0, "cmdoption-megfile-ls-arg-PATH"], [0, "cmdoption-megfile-ls-h"], [0, "cmdoption-megfile-ls-l"], [0, "cmdoption-megfile-ls-r"]], "megfile-md5sum command line option": [[0, "cmdoption-megfile-md5sum-arg-PATH"]], "megfile-mkdir command line option": [[0, "cmdoption-megfile-mkdir-arg-PATH"]], "megfile-mtime command line option": [[0, "cmdoption-megfile-mtime-arg-PATH"]], "megfile-mv command line option": [[0, "cmdoption-megfile-mv-T"], [0, "cmdoption-megfile-mv-arg-DST_PATH"], [0, "cmdoption-megfile-mv-arg-SRC_PATH"], [0, "cmdoption-megfile-mv-r"]], "megfile-rm command line option": [[0, "cmdoption-megfile-rm-arg-PATH"], [0, "cmdoption-megfile-rm-r"]], "megfile-size command line option": [[0, "cmdoption-megfile-size-arg-PATH"]], "megfile-stat command line option": [[0, "cmdoption-megfile-stat-arg-PATH"]], "megfile-sync command line option": [[0, "cmdoption-megfile-sync-arg-DST_PATH"], [0, "cmdoption-megfile-sync-arg-SRC_PATH"]], "megfile-touch command line option": [[0, "cmdoption-megfile-touch-arg-PATH"]], "fspath (class in megfile)": [[2, "megfile.FSPath"]], "httppath (class in megfile)": [[2, "megfile.HttpPath"]], "httpspath (class in megfile)": [[2, "megfile.HttpsPath"]], "s3path (class in megfile)": [[2, "megfile.S3Path"]], "smartpath (class in megfile)": [[2, "megfile.SmartPath"]], "stdiopath (class in megfile)": [[2, "megfile.StdioPath"]], "abspath() (megfile.fspath method)": [[2, "megfile.FSPath.abspath"]], "abspath() (megfile.smartpath method)": [[2, "megfile.SmartPath.abspath"]], "access() (megfile.fspath method)": [[2, "megfile.FSPath.access"]], "access() (megfile.s3path method)": [[2, "megfile.S3Path.access"]], "access() (megfile.smartpath method)": [[2, "megfile.SmartPath.access"]], "anchor (megfile.smartpath property)": [[2, "megfile.SmartPath.anchor"]], "as_posix() (megfile.smartpath method)": [[2, "megfile.SmartPath.as_posix"]], "as_uri() (megfile.smartpath method)": [[2, "megfile.SmartPath.as_uri"]], "copy() (megfile.fspath method)": [[2, "megfile.FSPath.copy"]], "copy() (megfile.s3path method)": [[2, "megfile.S3Path.copy"]], "cwd() (megfile.fspath static method)": [[2, "megfile.FSPath.cwd"]], "drive (megfile.smartpath property)": [[2, "megfile.SmartPath.drive"]], "exists() (megfile.fspath method)": [[2, "megfile.FSPath.exists"]], "exists() (megfile.s3path method)": [[2, "megfile.S3Path.exists"]], "exists() (megfile.smartpath method)": [[2, "megfile.SmartPath.exists"]], "expanduser() (megfile.fspath method)": [[2, "megfile.FSPath.expanduser"]], "from_uri() (megfile.fspath class method)": [[2, "megfile.FSPath.from_uri"]], "from_uri() (megfile.smartpath class method)": [[2, "megfile.SmartPath.from_uri"]], "fs_abspath() (in module megfile)": [[2, "megfile.fs_abspath"]], "fs_access() (in module megfile)": [[2, "megfile.fs_access"]], "fs_cwd() (in module megfile)": [[2, "megfile.fs_cwd"]], "fs_exists() (in module megfile)": [[2, "megfile.fs_exists"]], "fs_expanduser() (in module megfile)": [[2, "megfile.fs_expanduser"]], "fs_getmd5() (in module megfile)": [[2, "megfile.fs_getmd5"]], "fs_getmtime() (in module megfile)": [[2, "megfile.fs_getmtime"]], "fs_getsize() (in module megfile)": [[2, "megfile.fs_getsize"]], "fs_glob() (in module megfile)": [[2, "megfile.fs_glob"]], "fs_glob_stat() (in module megfile)": [[2, "megfile.fs_glob_stat"]], "fs_home() (in module megfile)": [[2, "megfile.fs_home"]], "fs_iglob() (in module megfile)": [[2, "megfile.fs_iglob"]], "fs_isabs() (in module megfile)": [[2, "megfile.fs_isabs"]], "fs_isdir() (in module megfile)": [[2, "megfile.fs_isdir"]], "fs_isfile() (in module megfile)": [[2, "megfile.fs_isfile"]], "fs_islink() (in module megfile)": [[2, "megfile.fs_islink"]], "fs_ismount() (in module megfile)": [[2, "megfile.fs_ismount"]], "fs_listdir() (in module megfile)": [[2, "megfile.fs_listdir"]], "fs_load_from() (in module megfile)": [[2, "megfile.fs_load_from"]], "fs_makedirs() (in module megfile)": [[2, "megfile.fs_makedirs"]], "fs_move() (in module megfile)": [[2, "megfile.fs_move"]], "fs_readlink() (in module megfile)": [[2, "megfile.fs_readlink"]], "fs_realpath() (in module megfile)": [[2, "megfile.fs_realpath"]], "fs_relpath() (in module megfile)": [[2, "megfile.fs_relpath"]], "fs_remove() (in module megfile)": [[2, "megfile.fs_remove"]], "fs_rename() (in module megfile)": [[2, "megfile.fs_rename"]], "fs_resolve() (in module megfile)": [[2, "megfile.fs_resolve"]], "fs_save_as() (in module megfile)": [[2, "megfile.fs_save_as"]], "fs_scan() (in module megfile)": [[2, "megfile.fs_scan"]], "fs_scan_stat() (in module megfile)": [[2, "megfile.fs_scan_stat"]], "fs_scandir() (in module megfile)": [[2, "megfile.fs_scandir"]], "fs_stat() (in module megfile)": [[2, "megfile.fs_stat"]], "fs_symlink() (in module megfile)": [[2, "megfile.fs_symlink"]], "fs_sync() (in module megfile)": [[2, "megfile.fs_sync"]], "fs_unlink() (in module megfile)": [[2, "megfile.fs_unlink"]], "fs_walk() (in module megfile)": [[2, "megfile.fs_walk"]], "getmtime() (megfile.fspath method)": [[2, "megfile.FSPath.getmtime"]], "getmtime() (megfile.httppath method)": [[2, "megfile.HttpPath.getmtime"]], "getmtime() (megfile.s3path method)": [[2, "megfile.S3Path.getmtime"]], "getmtime() (megfile.smartpath method)": [[2, "megfile.SmartPath.getmtime"]], "getsize() (megfile.fspath method)": [[2, "megfile.FSPath.getsize"]], "getsize() (megfile.httppath method)": [[2, "megfile.HttpPath.getsize"]], "getsize() (megfile.s3path method)": [[2, "megfile.S3Path.getsize"]], "getsize() (megfile.smartpath method)": [[2, "megfile.SmartPath.getsize"]], "glob() (megfile.fspath method)": [[2, "megfile.FSPath.glob"]], "glob() (megfile.s3path method)": [[2, "megfile.S3Path.glob"]], "glob() (megfile.smartpath method)": [[2, "megfile.SmartPath.glob"]], "glob_stat() (megfile.fspath method)": [[2, "megfile.FSPath.glob_stat"]], "glob_stat() (megfile.s3path method)": [[2, "megfile.S3Path.glob_stat"]], "glob_stat() (megfile.smartpath method)": [[2, "megfile.SmartPath.glob_stat"]], "hasbucket() (megfile.s3path method)": [[2, "megfile.S3Path.hasbucket"]], "home() (megfile.fspath static method)": [[2, "megfile.FSPath.home"]], "iglob() (megfile.fspath method)": [[2, "megfile.FSPath.iglob"]], "iglob() (megfile.s3path method)": [[2, "megfile.S3Path.iglob"]], "iglob() (megfile.smartpath method)": [[2, "megfile.SmartPath.iglob"]], "is_absolute() (megfile.fspath method)": [[2, "megfile.FSPath.is_absolute"]], "is_absolute() (megfile.smartpath method)": [[2, "megfile.SmartPath.is_absolute"]], "is_dir() (megfile.fspath method)": [[2, "megfile.FSPath.is_dir"]], "is_dir() (megfile.s3path method)": [[2, "megfile.S3Path.is_dir"]], "is_dir() (megfile.smartpath method)": [[2, "megfile.SmartPath.is_dir"]], "is_file() (megfile.fspath method)": [[2, "megfile.FSPath.is_file"]], "is_file() (megfile.s3path method)": [[2, "megfile.S3Path.is_file"]], "is_file() (megfile.smartpath method)": [[2, "megfile.SmartPath.is_file"]], "is_fs() (in module megfile)": [[2, "megfile.is_fs"]], "is_mount() (megfile.fspath method)": [[2, "megfile.FSPath.is_mount"]], "is_mount() (megfile.smartpath method)": [[2, "megfile.SmartPath.is_mount"]], "is_reserved() (megfile.smartpath method)": [[2, "megfile.SmartPath.is_reserved"]], "is_s3() (in module megfile)": [[2, "megfile.is_s3"]], "is_symlink() (megfile.fspath method)": [[2, "megfile.FSPath.is_symlink"]], "is_symlink() (megfile.s3path method)": [[2, "megfile.S3Path.is_symlink"]], "is_symlink() (megfile.smartpath method)": [[2, "megfile.SmartPath.is_symlink"]], "joinpath() (megfile.fspath method)": [[2, "megfile.FSPath.joinpath"]], "joinpath() (megfile.smartpath method)": [[2, "megfile.SmartPath.joinpath"]], "listdir() (megfile.fspath method)": [[2, "megfile.FSPath.listdir"]], "listdir() (megfile.s3path method)": [[2, "megfile.S3Path.listdir"]], "listdir() (megfile.smartpath method)": [[2, "megfile.SmartPath.listdir"]], "load() (megfile.fspath method)": [[2, "megfile.FSPath.load"]], "load() (megfile.s3path method)": [[2, "megfile.S3Path.load"]], "load() (megfile.smartpath method)": [[2, "megfile.SmartPath.load"]], "match() (megfile.smartpath method)": [[2, "megfile.SmartPath.match"]], "md5() (megfile.fspath method)": [[2, "megfile.FSPath.md5"]], "md5() (megfile.s3path method)": [[2, "megfile.S3Path.md5"]], "md5() (megfile.smartpath method)": [[2, "megfile.SmartPath.md5"]], "megfile": [[2, "module-megfile"]], "mkdir() (megfile.fspath method)": [[2, "megfile.FSPath.mkdir"]], "mkdir() (megfile.s3path method)": [[2, "megfile.S3Path.mkdir"]], "mkdir() (megfile.smartpath method)": [[2, "megfile.SmartPath.mkdir"]], "module": [[2, "module-megfile"], [3, "module-megfile.fs"], [4, "module-megfile.fs_path"], [5, "module-megfile.http"], [6, "module-megfile.http_path"], [7, "module-megfile.s3"], [8, "module-megfile.s3_path"], [9, "module-megfile.smart"], [10, "module-megfile.smart_path"], [11, "module-megfile.stdio"], [12, "module-megfile.stdio_path"]], "move() (megfile.s3path method)": [[2, "megfile.S3Path.move"]], "name (megfile.smartpath property)": [[2, "megfile.SmartPath.name"]], "open() (megfile.fspath method)": [[2, "megfile.FSPath.open"]], "open() (megfile.httppath method)": [[2, "megfile.HttpPath.open"]], "open() (megfile.s3path method)": [[2, "megfile.S3Path.open"]], "open() (megfile.smartpath method)": [[2, "megfile.SmartPath.open"]], "open() (megfile.stdiopath method)": [[2, "megfile.StdioPath.open"]], "parent (megfile.smartpath property)": [[2, "megfile.SmartPath.parent"]], "parents (megfile.smartpath property)": [[2, "megfile.SmartPath.parents"]], "parts (megfile.smartpath property)": [[2, "megfile.SmartPath.parts"]], "path_with_protocol (megfile.fspath property)": [[2, "megfile.FSPath.path_with_protocol"]], "protocol (megfile.fspath attribute)": [[2, "megfile.FSPath.protocol"]], "protocol (megfile.httppath attribute)": [[2, "megfile.HttpPath.protocol"]], "protocol (megfile.httpspath attribute)": [[2, "megfile.HttpsPath.protocol"]], "protocol (megfile.s3path attribute)": [[2, "megfile.S3Path.protocol"]], "protocol (megfile.smartpath property)": [[2, "megfile.SmartPath.protocol"]], "protocol (megfile.stdiopath attribute)": [[2, "megfile.StdioPath.protocol"]], "readlink() (megfile.fspath method)": [[2, "megfile.FSPath.readlink"]], "readlink() (megfile.s3path method)": [[2, "megfile.S3Path.readlink"]], "readlink() (megfile.smartpath method)": [[2, "megfile.SmartPath.readlink"]], "realpath() (megfile.fspath method)": [[2, "megfile.FSPath.realpath"]], "realpath() (megfile.smartpath method)": [[2, "megfile.SmartPath.realpath"]], "register() (megfile.smartpath class method)": [[2, "megfile.SmartPath.register"]], "relative_to() (megfile.smartpath method)": [[2, "megfile.SmartPath.relative_to"]], "relpath() (megfile.fspath method)": [[2, "megfile.FSPath.relpath"]], "relpath() (megfile.smartpath method)": [[2, "megfile.SmartPath.relpath"]], "remove() (megfile.fspath method)": [[2, "megfile.FSPath.remove"]], "remove() (megfile.s3path method)": [[2, "megfile.S3Path.remove"]], "remove() (megfile.smartpath method)": [[2, "megfile.SmartPath.remove"]], "rename() (megfile.fspath method)": [[2, "megfile.FSPath.rename"]], "rename() (megfile.s3path method)": [[2, "megfile.S3Path.rename"]], "rename() (megfile.smartpath method)": [[2, "megfile.SmartPath.rename"]], "replace() (megfile.fspath method)": [[2, "megfile.FSPath.replace"]], "replace() (megfile.smartpath method)": [[2, "megfile.SmartPath.replace"]], "resolve() (megfile.fspath method)": [[2, "megfile.FSPath.resolve"]], "root (megfile.smartpath property)": [[2, "megfile.SmartPath.root"]], "s3_access() (in module megfile)": [[2, "megfile.s3_access"]], "s3_buffered_open() (in module megfile)": [[2, "megfile.s3_buffered_open"]], "s3_cached_open() (in module megfile)": [[2, "megfile.s3_cached_open"]], "s3_copy() (in module megfile)": [[2, "megfile.s3_copy"]], "s3_download() (in module megfile)": [[2, "megfile.s3_download"]], "s3_exists() (in module megfile)": [[2, "megfile.s3_exists"]], "s3_getmd5() (in module megfile)": [[2, "megfile.s3_getmd5"]], "s3_getmtime() (in module megfile)": [[2, "megfile.s3_getmtime"]], "s3_getsize() (in module megfile)": [[2, "megfile.s3_getsize"]], "s3_glob() (in module megfile)": [[2, "megfile.s3_glob"]], "s3_glob_stat() (in module megfile)": [[2, "megfile.s3_glob_stat"]], "s3_hasbucket() (in module megfile)": [[2, "megfile.s3_hasbucket"]], "s3_iglob() (in module megfile)": [[2, "megfile.s3_iglob"]], "s3_isdir() (in module megfile)": [[2, "megfile.s3_isdir"]], "s3_isfile() (in module megfile)": [[2, "megfile.s3_isfile"]], "s3_legacy_open() (in module megfile)": [[2, "megfile.s3_legacy_open"]], "s3_listdir() (in module megfile)": [[2, "megfile.s3_listdir"]], "s3_load_content() (in module megfile)": [[2, "megfile.s3_load_content"]], "s3_load_from() (in module megfile)": [[2, "megfile.s3_load_from"]], "s3_makedirs() (in module megfile)": [[2, "megfile.s3_makedirs"]], "s3_memory_open() (in module megfile)": [[2, "megfile.s3_memory_open"]], "s3_move() (in module megfile)": [[2, "megfile.s3_move"]], "s3_open() (in module megfile)": [[2, "megfile.s3_open"]], "s3_path_join() (in module megfile)": [[2, "megfile.s3_path_join"]], "s3_pipe_open() (in module megfile)": [[2, "megfile.s3_pipe_open"]], "s3_prefetch_open() (in module megfile)": [[2, "megfile.s3_prefetch_open"]], "s3_readlink() (in module megfile)": [[2, "megfile.s3_readlink"]], "s3_remove() (in module megfile)": [[2, "megfile.s3_remove"]], "s3_rename() (in module megfile)": [[2, "megfile.s3_rename"]], "s3_save_as() (in module megfile)": [[2, "megfile.s3_save_as"]], "s3_scan() (in module megfile)": [[2, "megfile.s3_scan"]], "s3_scan_stat() (in module megfile)": [[2, "megfile.s3_scan_stat"]], "s3_scandir() (in module megfile)": [[2, "megfile.s3_scandir"]], "s3_stat() (in module megfile)": [[2, "megfile.s3_stat"]], "s3_symlink() (in module megfile)": [[2, "megfile.s3_symlink"]], "s3_sync() (in module megfile)": [[2, "megfile.s3_sync"]], "s3_unlink() (in module megfile)": [[2, "megfile.s3_unlink"]], "s3_upload() (in module megfile)": [[2, "megfile.s3_upload"]], "s3_walk() (in module megfile)": [[2, "megfile.s3_walk"]], "save() (megfile.fspath method)": [[2, "megfile.FSPath.save"]], "save() (megfile.s3path method)": [[2, "megfile.S3Path.save"]], "save() (megfile.smartpath method)": [[2, "megfile.SmartPath.save"]], "scan() (megfile.fspath method)": [[2, "megfile.FSPath.scan"]], "scan() (megfile.s3path method)": [[2, "megfile.S3Path.scan"]], "scan() (megfile.smartpath method)": [[2, "megfile.SmartPath.scan"]], "scan_stat() (megfile.fspath method)": [[2, "megfile.FSPath.scan_stat"]], "scan_stat() (megfile.s3path method)": [[2, "megfile.S3Path.scan_stat"]], "scan_stat() (megfile.smartpath method)": [[2, "megfile.SmartPath.scan_stat"]], "scandir() (megfile.fspath method)": [[2, "megfile.FSPath.scandir"]], "scandir() (megfile.s3path method)": [[2, "megfile.S3Path.scandir"]], "scandir() (megfile.smartpath method)": [[2, "megfile.SmartPath.scandir"]], "smart_access() (in module megfile)": [[2, "megfile.smart_access"]], "smart_cache() (in module megfile)": [[2, "megfile.smart_cache"]], "smart_combine_open() (in module megfile)": [[2, "megfile.smart_combine_open"]], "smart_copy() (in module megfile)": [[2, "megfile.smart_copy"]], "smart_exists() (in module megfile)": [[2, "megfile.smart_exists"]], "smart_getmd5() (in module megfile)": [[2, "megfile.smart_getmd5"]], "smart_getmtime() (in module megfile)": [[2, "megfile.smart_getmtime"]], "smart_getsize() (in module megfile)": [[2, "megfile.smart_getsize"]], "smart_glob() (in module megfile)": [[2, "megfile.smart_glob"]], "smart_glob_stat() (in module megfile)": [[2, "megfile.smart_glob_stat"]], "smart_iglob() (in module megfile)": [[2, "megfile.smart_iglob"]], "smart_isdir() (in module megfile)": [[2, "megfile.smart_isdir"]], "smart_isfile() (in module megfile)": [[2, "megfile.smart_isfile"]], "smart_islink() (in module megfile)": [[2, "megfile.smart_islink"]], "smart_listdir() (in module megfile)": [[2, "megfile.smart_listdir"]], "smart_load_content() (in module megfile)": [[2, "megfile.smart_load_content"]], "smart_load_from() (in module megfile)": [[2, "megfile.smart_load_from"]], "smart_load_text() (in module megfile)": [[2, "megfile.smart_load_text"]], "smart_makedirs() (in module megfile)": [[2, "megfile.smart_makedirs"]], "smart_move() (in module megfile)": [[2, "megfile.smart_move"]], "smart_open() (in module megfile)": [[2, "megfile.smart_open"]], "smart_path_join() (in module megfile)": [[2, "megfile.smart_path_join"]], "smart_readlink() (in module megfile)": [[2, "megfile.smart_readlink"]], "smart_realpath() (in module megfile)": [[2, "megfile.smart_realpath"]], "smart_remove() (in module megfile)": [[2, "megfile.smart_remove"]], "smart_rename() (in module megfile)": [[2, "megfile.smart_rename"]], "smart_save_as() (in module megfile)": [[2, "megfile.smart_save_as"]], "smart_save_content() (in module megfile)": [[2, "megfile.smart_save_content"]], "smart_save_text() (in module megfile)": [[2, "megfile.smart_save_text"]], "smart_scan() (in module megfile)": [[2, "megfile.smart_scan"]], "smart_scan_stat() (in module megfile)": [[2, "megfile.smart_scan_stat"]], "smart_scandir() (in module megfile)": [[2, "megfile.smart_scandir"]], "smart_stat() (in module megfile)": [[2, "megfile.smart_stat"]], "smart_symlink() (in module megfile)": [[2, "megfile.smart_symlink"]], "smart_sync() (in module megfile)": [[2, "megfile.smart_sync"]], "smart_touch() (in module megfile)": [[2, "megfile.smart_touch"]], "smart_unlink() (in module megfile)": [[2, "megfile.smart_unlink"]], "smart_walk() (in module megfile)": [[2, "megfile.smart_walk"]], "stat() (megfile.fspath method)": [[2, "megfile.FSPath.stat"]], "stat() (megfile.httppath method)": [[2, "megfile.HttpPath.stat"]], "stat() (megfile.s3path method)": [[2, "megfile.S3Path.stat"]], "stat() (megfile.smartpath method)": [[2, "megfile.SmartPath.stat"]], "stem (megfile.smartpath property)": [[2, "megfile.SmartPath.stem"]], "suffix (megfile.smartpath property)": [[2, "megfile.SmartPath.suffix"]], "suffixes (megfile.smartpath property)": [[2, "megfile.SmartPath.suffixes"]], "symlink() (megfile.fspath method)": [[2, "megfile.FSPath.symlink"]], "symlink() (megfile.s3path method)": [[2, "megfile.S3Path.symlink"]], "symlink() (megfile.smartpath method)": [[2, "megfile.SmartPath.symlink"]], "sync() (megfile.fspath method)": [[2, "megfile.FSPath.sync"]], "sync() (megfile.s3path method)": [[2, "megfile.S3Path.sync"]], "touch() (megfile.smartpath method)": [[2, "megfile.SmartPath.touch"]], "unlink() (megfile.fspath method)": [[2, "megfile.FSPath.unlink"]], "unlink() (megfile.s3path method)": [[2, "megfile.S3Path.unlink"]], "unlink() (megfile.smartpath method)": [[2, "megfile.SmartPath.unlink"]], "walk() (megfile.fspath method)": [[2, "megfile.FSPath.walk"]], "walk() (megfile.s3path method)": [[2, "megfile.S3Path.walk"]], "walk() (megfile.smartpath method)": [[2, "megfile.SmartPath.walk"]], "with_name() (megfile.smartpath method)": [[2, "megfile.SmartPath.with_name"]], "with_suffix() (megfile.smartpath method)": [[2, "megfile.SmartPath.with_suffix"]], "fspath (class in megfile.fs)": [[3, "megfile.fs.FSPath"]], "statresult (class in megfile.fs)": [[3, "megfile.fs.StatResult"]], "abspath() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.abspath"]], "access() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.access"]], "copy() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.copy"]], "cwd() (megfile.fs.fspath static method)": [[3, "megfile.fs.FSPath.cwd"]], "exists() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.exists"]], "expanduser() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.expanduser"]], "from_uri() (megfile.fs.fspath class method)": [[3, "megfile.fs.FSPath.from_uri"]], "fs_abspath() (in module megfile.fs)": [[3, "megfile.fs.fs_abspath"]], "fs_access() (in module megfile.fs)": [[3, "megfile.fs.fs_access"]], "fs_copy() (in module megfile.fs)": [[3, "megfile.fs.fs_copy"]], "fs_cwd() (in module megfile.fs)": [[3, "megfile.fs.fs_cwd"]], "fs_exists() (in module megfile.fs)": [[3, "megfile.fs.fs_exists"]], "fs_expanduser() (in module megfile.fs)": [[3, "megfile.fs.fs_expanduser"]], "fs_getmd5() (in module megfile.fs)": [[3, "megfile.fs.fs_getmd5"]], "fs_getmtime() (in module megfile.fs)": [[3, "megfile.fs.fs_getmtime"]], "fs_getsize() (in module megfile.fs)": [[3, "megfile.fs.fs_getsize"]], "fs_glob() (in module megfile.fs)": [[3, "megfile.fs.fs_glob"]], "fs_glob_stat() (in module megfile.fs)": [[3, "megfile.fs.fs_glob_stat"]], "fs_home() (in module megfile.fs)": [[3, "megfile.fs.fs_home"]], "fs_iglob() (in module megfile.fs)": [[3, "megfile.fs.fs_iglob"]], "fs_isabs() (in module megfile.fs)": [[3, "megfile.fs.fs_isabs"]], "fs_isdir() (in module megfile.fs)": [[3, "megfile.fs.fs_isdir"]], "fs_isfile() (in module megfile.fs)": [[3, "megfile.fs.fs_isfile"]], "fs_islink() (in module megfile.fs)": [[3, "megfile.fs.fs_islink"]], "fs_ismount() (in module megfile.fs)": [[3, "megfile.fs.fs_ismount"]], "fs_listdir() (in module megfile.fs)": [[3, "megfile.fs.fs_listdir"]], "fs_load_from() (in module megfile.fs)": [[3, "megfile.fs.fs_load_from"]], "fs_makedirs() (in module megfile.fs)": [[3, "megfile.fs.fs_makedirs"]], "fs_move() (in module megfile.fs)": [[3, "megfile.fs.fs_move"]], "fs_path_join() (in module megfile.fs)": [[3, "megfile.fs.fs_path_join"]], "fs_readlink() (in module megfile.fs)": [[3, "megfile.fs.fs_readlink"]], "fs_realpath() (in module megfile.fs)": [[3, "megfile.fs.fs_realpath"]], "fs_relpath() (in module megfile.fs)": [[3, "megfile.fs.fs_relpath"]], "fs_remove() (in module megfile.fs)": [[3, "megfile.fs.fs_remove"]], "fs_rename() (in module megfile.fs)": [[3, "megfile.fs.fs_rename"]], "fs_resolve() (in module megfile.fs)": [[3, "megfile.fs.fs_resolve"]], "fs_save_as() (in module megfile.fs)": [[3, "megfile.fs.fs_save_as"]], "fs_scan() (in module megfile.fs)": [[3, "megfile.fs.fs_scan"]], "fs_scan_stat() (in module megfile.fs)": [[3, "megfile.fs.fs_scan_stat"]], "fs_scandir() (in module megfile.fs)": [[3, "megfile.fs.fs_scandir"]], "fs_stat() (in module megfile.fs)": [[3, "megfile.fs.fs_stat"]], "fs_symlink() (in module megfile.fs)": [[3, "megfile.fs.fs_symlink"]], "fs_sync() (in module megfile.fs)": [[3, "megfile.fs.fs_sync"]], "fs_unlink() (in module megfile.fs)": [[3, "megfile.fs.fs_unlink"]], "fs_walk() (in module megfile.fs)": [[3, "megfile.fs.fs_walk"]], "getmtime() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.getmtime"]], "getsize() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.getsize"]], "glob() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.glob"]], "glob_stat() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.glob_stat"]], "home() (megfile.fs.fspath static method)": [[3, "megfile.fs.FSPath.home"]], "iglob() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.iglob"]], "is_absolute() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.is_absolute"]], "is_dir() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.is_dir"]], "is_dir() (megfile.fs.statresult method)": [[3, "megfile.fs.StatResult.is_dir"]], "is_file() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.is_file"]], "is_file() (megfile.fs.statresult method)": [[3, "megfile.fs.StatResult.is_file"]], "is_fs() (in module megfile.fs)": [[3, "megfile.fs.is_fs"]], "is_mount() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.is_mount"]], "is_symlink() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.is_symlink"]], "is_symlink() (megfile.fs.statresult method)": [[3, "megfile.fs.StatResult.is_symlink"]], "joinpath() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.joinpath"]], "listdir() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.listdir"]], "load() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.load"]], "md5() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.md5"]], "megfile.fs": [[3, "module-megfile.fs"]], "mkdir() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.mkdir"]], "open() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.open"]], "path_with_protocol (megfile.fs.fspath property)": [[3, "megfile.fs.FSPath.path_with_protocol"]], "protocol (megfile.fs.fspath attribute)": [[3, "megfile.fs.FSPath.protocol"]], "readlink() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.readlink"]], "realpath() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.realpath"]], "relpath() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.relpath"]], "remove() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.remove"]], "rename() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.rename"]], "replace() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.replace"]], "resolve() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.resolve"]], "save() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.save"]], "scan() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.scan"]], "scan_stat() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.scan_stat"]], "scandir() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.scandir"]], "stat() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.stat"]], "symlink() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.symlink"]], "sync() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.sync"]], "unlink() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.unlink"]], "walk() (megfile.fs.fspath method)": [[3, "megfile.fs.FSPath.walk"]], "fspath (class in megfile.fs_path)": [[4, "megfile.fs_path.FSPath"]], "statresult (class in megfile.fs_path)": [[4, "megfile.fs_path.StatResult"]], "abspath() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.abspath"]], "access() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.access"]], "copy() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.copy"]], "cwd() (megfile.fs_path.fspath static method)": [[4, "megfile.fs_path.FSPath.cwd"]], "exists() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.exists"]], "expanduser() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.expanduser"]], "from_uri() (megfile.fs_path.fspath class method)": [[4, "megfile.fs_path.FSPath.from_uri"]], "fs_path_join() (in module megfile.fs_path)": [[4, "megfile.fs_path.fs_path_join"]], "getmtime() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.getmtime"]], "getsize() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.getsize"]], "glob() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.glob"]], "glob_stat() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.glob_stat"]], "home() (megfile.fs_path.fspath static method)": [[4, "megfile.fs_path.FSPath.home"]], "iglob() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.iglob"]], "is_absolute() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.is_absolute"]], "is_dir() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.is_dir"]], "is_dir() (megfile.fs_path.statresult method)": [[4, "megfile.fs_path.StatResult.is_dir"]], "is_file() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.is_file"]], "is_file() (megfile.fs_path.statresult method)": [[4, "megfile.fs_path.StatResult.is_file"]], "is_fs() (in module megfile.fs_path)": [[4, "megfile.fs_path.is_fs"]], "is_mount() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.is_mount"]], "is_symlink() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.is_symlink"]], "is_symlink() (megfile.fs_path.statresult method)": [[4, "megfile.fs_path.StatResult.is_symlink"]], "joinpath() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.joinpath"]], "listdir() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.listdir"]], "load() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.load"]], "md5() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.md5"]], "megfile.fs_path": [[4, "module-megfile.fs_path"]], "mkdir() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.mkdir"]], "open() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.open"]], "path_with_protocol (megfile.fs_path.fspath property)": [[4, "megfile.fs_path.FSPath.path_with_protocol"]], "protocol (megfile.fs_path.fspath attribute)": [[4, "megfile.fs_path.FSPath.protocol"]], "readlink() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.readlink"]], "realpath() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.realpath"]], "relpath() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.relpath"]], "remove() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.remove"]], "rename() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.rename"]], "replace() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.replace"]], "resolve() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.resolve"]], "save() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.save"]], "scan() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.scan"]], "scan_stat() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.scan_stat"]], "scandir() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.scandir"]], "stat() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.stat"]], "symlink() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.symlink"]], "sync() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.sync"]], "unlink() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.unlink"]], "walk() (megfile.fs_path.fspath method)": [[4, "megfile.fs_path.FSPath.walk"]], "httppath (class in megfile.http)": [[5, "megfile.http.HttpPath"]], "httpspath (class in megfile.http)": [[5, "megfile.http.HttpsPath"]], "get_http_session() (in module megfile.http)": [[5, "megfile.http.get_http_session"]], "getmtime() (megfile.http.httppath method)": [[5, "megfile.http.HttpPath.getmtime"]], "getsize() (megfile.http.httppath method)": [[5, "megfile.http.HttpPath.getsize"]], "http_getmtime() (in module megfile.http)": [[5, "megfile.http.http_getmtime"]], "http_getsize() (in module megfile.http)": [[5, "megfile.http.http_getsize"]], "http_open() (in module megfile.http)": [[5, "megfile.http.http_open"]], "http_stat() (in module megfile.http)": [[5, "megfile.http.http_stat"]], "is_http() (in module megfile.http)": [[5, "megfile.http.is_http"]], "megfile.http": [[5, "module-megfile.http"]], "open() (megfile.http.httppath method)": [[5, "megfile.http.HttpPath.open"]], "protocol (megfile.http.httppath attribute)": [[5, "megfile.http.HttpPath.protocol"]], "protocol (megfile.http.httpspath attribute)": [[5, "megfile.http.HttpsPath.protocol"]], "stat() (megfile.http.httppath method)": [[5, "megfile.http.HttpPath.stat"]], "httppath (class in megfile.http_path)": [[6, "megfile.http_path.HttpPath"]], "httpspath (class in megfile.http_path)": [[6, "megfile.http_path.HttpsPath"]], "get_http_session() (in module megfile.http_path)": [[6, "megfile.http_path.get_http_session"]], "getmtime() (megfile.http_path.httppath method)": [[6, "megfile.http_path.HttpPath.getmtime"]], "getsize() (megfile.http_path.httppath method)": [[6, "megfile.http_path.HttpPath.getsize"]], "is_http() (in module megfile.http_path)": [[6, "megfile.http_path.is_http"]], "megfile.http_path": [[6, "module-megfile.http_path"]], "open() (megfile.http_path.httppath method)": [[6, "megfile.http_path.HttpPath.open"]], "protocol (megfile.http_path.httppath attribute)": [[6, "megfile.http_path.HttpPath.protocol"]], "protocol (megfile.http_path.httpspath attribute)": [[6, "megfile.http_path.HttpsPath.protocol"]], "stat() (megfile.http_path.httppath method)": [[6, "megfile.http_path.HttpPath.stat"]], "s3bufferedwriter (class in megfile.s3)": [[7, "megfile.s3.S3BufferedWriter"]], "s3cacher (class in megfile.s3)": [[7, "megfile.s3.S3Cacher"]], "s3limitedseekablewriter (class in megfile.s3)": [[7, "megfile.s3.S3LimitedSeekableWriter"]], "s3path (class in megfile.s3)": [[7, "megfile.s3.S3Path"]], "s3prefetchreader (class in megfile.s3)": [[7, "megfile.s3.S3PrefetchReader"]], "s3sharecachereader (class in megfile.s3)": [[7, "megfile.s3.S3ShareCacheReader"]], "access() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.access"]], "cache_path (megfile.s3.s3cacher attribute)": [[7, "megfile.s3.S3Cacher.cache_path"]], "copy() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.copy"]], "exists() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.exists"]], "get_endpoint_url() (in module megfile.s3)": [[7, "megfile.s3.get_endpoint_url"]], "get_s3_client() (in module megfile.s3)": [[7, "megfile.s3.get_s3_client"]], "get_s3_session() (in module megfile.s3)": [[7, "megfile.s3.get_s3_session"]], "getmtime() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.getmtime"]], "getsize() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.getsize"]], "glob() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.glob"]], "glob_stat() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.glob_stat"]], "hasbucket() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.hasbucket"]], "iglob() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.iglob"]], "is_dir() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.is_dir"]], "is_file() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.is_file"]], "is_s3() (in module megfile.s3)": [[7, "megfile.s3.is_s3"]], "is_symlink() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.is_symlink"]], "listdir() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.listdir"]], "load() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.load"]], "md5() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.md5"]], "megfile.s3": [[7, "module-megfile.s3"]], "mkdir() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.mkdir"]], "mode (megfile.s3.s3bufferedwriter property)": [[7, "megfile.s3.S3BufferedWriter.mode"]], "mode (megfile.s3.s3prefetchreader property)": [[7, "megfile.s3.S3PrefetchReader.mode"]], "move() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.move"]], "name (megfile.s3.s3bufferedwriter property)": [[7, "megfile.s3.S3BufferedWriter.name"]], "name (megfile.s3.s3prefetchreader property)": [[7, "megfile.s3.S3PrefetchReader.name"]], "open() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.open"]], "parse_s3_url() (in module megfile.s3)": [[7, "megfile.s3.parse_s3_url"]], "protocol (megfile.s3.s3path attribute)": [[7, "megfile.s3.S3Path.protocol"]], "read() (megfile.s3.s3prefetchreader method)": [[7, "megfile.s3.S3PrefetchReader.read"]], "readinto() (megfile.s3.s3prefetchreader method)": [[7, "megfile.s3.S3PrefetchReader.readinto"]], "readline() (megfile.s3.s3prefetchreader method)": [[7, "megfile.s3.S3PrefetchReader.readline"]], "readlink() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.readlink"]], "remove() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.remove"]], "rename() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.rename"]], "s3_access() (in module megfile.s3)": [[7, "megfile.s3.s3_access"]], "s3_buffered_open() (in module megfile.s3)": [[7, "megfile.s3.s3_buffered_open"]], "s3_cached_open() (in module megfile.s3)": [[7, "megfile.s3.s3_cached_open"]], "s3_copy() (in module megfile.s3)": [[7, "megfile.s3.s3_copy"]], "s3_download() (in module megfile.s3)": [[7, "megfile.s3.s3_download"]], "s3_exists() (in module megfile.s3)": [[7, "megfile.s3.s3_exists"]], "s3_getmd5() (in module megfile.s3)": [[7, "megfile.s3.s3_getmd5"]], "s3_getmtime() (in module megfile.s3)": [[7, "megfile.s3.s3_getmtime"]], "s3_getsize() (in module megfile.s3)": [[7, "megfile.s3.s3_getsize"]], "s3_glob() (in module megfile.s3)": [[7, "megfile.s3.s3_glob"]], "s3_glob_stat() (in module megfile.s3)": [[7, "megfile.s3.s3_glob_stat"]], "s3_hasbucket() (in module megfile.s3)": [[7, "megfile.s3.s3_hasbucket"]], "s3_iglob() (in module megfile.s3)": [[7, "megfile.s3.s3_iglob"]], "s3_isdir() (in module megfile.s3)": [[7, "megfile.s3.s3_isdir"]], "s3_isfile() (in module megfile.s3)": [[7, "megfile.s3.s3_isfile"]], "s3_islink() (in module megfile.s3)": [[7, "megfile.s3.s3_islink"]], "s3_legacy_open() (in module megfile.s3)": [[7, "megfile.s3.s3_legacy_open"]], "s3_listdir() (in module megfile.s3)": [[7, "megfile.s3.s3_listdir"]], "s3_load_content() (in module megfile.s3)": [[7, "megfile.s3.s3_load_content"]], "s3_load_from() (in module megfile.s3)": [[7, "megfile.s3.s3_load_from"]], "s3_makedirs() (in module megfile.s3)": [[7, "megfile.s3.s3_makedirs"]], "s3_memory_open() (in module megfile.s3)": [[7, "megfile.s3.s3_memory_open"]], "s3_move() (in module megfile.s3)": [[7, "megfile.s3.s3_move"]], "s3_open() (in module megfile.s3)": [[7, "megfile.s3.s3_open"]], "s3_path_join() (in module megfile.s3)": [[7, "megfile.s3.s3_path_join"]], "s3_pipe_open() (in module megfile.s3)": [[7, "megfile.s3.s3_pipe_open"]], "s3_prefetch_open() (in module megfile.s3)": [[7, "megfile.s3.s3_prefetch_open"]], "s3_readlink() (in module megfile.s3)": [[7, "megfile.s3.s3_readlink"]], "s3_remove() (in module megfile.s3)": [[7, "megfile.s3.s3_remove"]], "s3_rename() (in module megfile.s3)": [[7, "megfile.s3.s3_rename"]], "s3_save_as() (in module megfile.s3)": [[7, "megfile.s3.s3_save_as"]], "s3_scan() (in module megfile.s3)": [[7, "megfile.s3.s3_scan"]], "s3_scan_stat() (in module megfile.s3)": [[7, "megfile.s3.s3_scan_stat"]], "s3_scandir() (in module megfile.s3)": [[7, "megfile.s3.s3_scandir"]], "s3_share_cache_open() (in module megfile.s3)": [[7, "megfile.s3.s3_share_cache_open"]], "s3_stat() (in module megfile.s3)": [[7, "megfile.s3.s3_stat"]], "s3_symlink() (in module megfile.s3)": [[7, "megfile.s3.s3_symlink"]], "s3_sync() (in module megfile.s3)": [[7, "megfile.s3.s3_sync"]], "s3_unlink() (in module megfile.s3)": [[7, "megfile.s3.s3_unlink"]], "s3_upload() (in module megfile.s3)": [[7, "megfile.s3.s3_upload"]], "s3_walk() (in module megfile.s3)": [[7, "megfile.s3.s3_walk"]], "save() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.save"]], "scan() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.scan"]], "scan_stat() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.scan_stat"]], "scandir() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.scandir"]], "seek() (megfile.s3.s3limitedseekablewriter method)": [[7, "megfile.s3.S3LimitedSeekableWriter.seek"]], "seek() (megfile.s3.s3prefetchreader method)": [[7, "megfile.s3.S3PrefetchReader.seek"]], "stat() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.stat"]], "symlink() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.symlink"]], "sync() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.sync"]], "tell() (megfile.s3.s3bufferedwriter method)": [[7, "megfile.s3.S3BufferedWriter.tell"]], "tell() (megfile.s3.s3prefetchreader method)": [[7, "megfile.s3.S3PrefetchReader.tell"]], "unlink() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.unlink"]], "walk() (megfile.s3.s3path method)": [[7, "megfile.s3.S3Path.walk"]], "write() (megfile.s3.s3bufferedwriter method)": [[7, "megfile.s3.S3BufferedWriter.write"]], "write() (megfile.s3.s3limitedseekablewriter method)": [[7, "megfile.s3.S3LimitedSeekableWriter.write"]], "s3bufferedwriter (class in megfile.s3_path)": [[8, "megfile.s3_path.S3BufferedWriter"]], "s3cacher (class in megfile.s3_path)": [[8, "megfile.s3_path.S3Cacher"]], "s3limitedseekablewriter (class in megfile.s3_path)": [[8, "megfile.s3_path.S3LimitedSeekableWriter"]], "s3path (class in megfile.s3_path)": [[8, "megfile.s3_path.S3Path"]], "s3prefetchreader (class in megfile.s3_path)": [[8, "megfile.s3_path.S3PrefetchReader"]], "s3sharecachereader (class in megfile.s3_path)": [[8, "megfile.s3_path.S3ShareCacheReader"]], "access() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.access"]], "cache_path (megfile.s3_path.s3cacher attribute)": [[8, "megfile.s3_path.S3Cacher.cache_path"]], "copy() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.copy"]], "exists() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.exists"]], "get_endpoint_url() (in module megfile.s3_path)": [[8, "megfile.s3_path.get_endpoint_url"]], "get_s3_client() (in module megfile.s3_path)": [[8, "megfile.s3_path.get_s3_client"]], "get_s3_session() (in module megfile.s3_path)": [[8, "megfile.s3_path.get_s3_session"]], "getmtime() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.getmtime"]], "getsize() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.getsize"]], "glob() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.glob"]], "glob_stat() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.glob_stat"]], "hasbucket() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.hasbucket"]], "iglob() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.iglob"]], "is_dir() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.is_dir"]], "is_file() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.is_file"]], "is_s3() (in module megfile.s3_path)": [[8, "megfile.s3_path.is_s3"]], "is_symlink() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.is_symlink"]], "listdir() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.listdir"]], "load() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.load"]], "md5() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.md5"]], "megfile.s3_path": [[8, "module-megfile.s3_path"]], "mkdir() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.mkdir"]], "mode (megfile.s3_path.s3bufferedwriter property)": [[8, "megfile.s3_path.S3BufferedWriter.mode"]], "mode (megfile.s3_path.s3prefetchreader property)": [[8, "megfile.s3_path.S3PrefetchReader.mode"]], "move() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.move"]], "name (megfile.s3_path.s3bufferedwriter property)": [[8, "megfile.s3_path.S3BufferedWriter.name"]], "name (megfile.s3_path.s3prefetchreader property)": [[8, "megfile.s3_path.S3PrefetchReader.name"]], "open() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.open"]], "parse_s3_url() (in module megfile.s3_path)": [[8, "megfile.s3_path.parse_s3_url"]], "protocol (megfile.s3_path.s3path attribute)": [[8, "megfile.s3_path.S3Path.protocol"]], "read() (megfile.s3_path.s3prefetchreader method)": [[8, "megfile.s3_path.S3PrefetchReader.read"]], "readinto() (megfile.s3_path.s3prefetchreader method)": [[8, "megfile.s3_path.S3PrefetchReader.readinto"]], "readline() (megfile.s3_path.s3prefetchreader method)": [[8, "megfile.s3_path.S3PrefetchReader.readline"]], "readlink() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.readlink"]], "remove() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.remove"]], "rename() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.rename"]], "s3_buffered_open() (in module megfile.s3_path)": [[8, "megfile.s3_path.s3_buffered_open"]], "s3_cached_open() (in module megfile.s3_path)": [[8, "megfile.s3_path.s3_cached_open"]], "s3_download() (in module megfile.s3_path)": [[8, "megfile.s3_path.s3_download"]], "s3_legacy_open() (in module megfile.s3_path)": [[8, "megfile.s3_path.s3_legacy_open"]], "s3_load_content() (in module megfile.s3_path)": [[8, "megfile.s3_path.s3_load_content"]], "s3_memory_open() (in module megfile.s3_path)": [[8, "megfile.s3_path.s3_memory_open"]], "s3_open() (in module megfile.s3_path)": [[8, "megfile.s3_path.s3_open"]], "s3_path_join() (in module megfile.s3_path)": [[8, "megfile.s3_path.s3_path_join"]], "s3_pipe_open() (in module megfile.s3_path)": [[8, "megfile.s3_path.s3_pipe_open"]], "s3_prefetch_open() (in module megfile.s3_path)": [[8, "megfile.s3_path.s3_prefetch_open"]], "s3_share_cache_open() (in module megfile.s3_path)": [[8, "megfile.s3_path.s3_share_cache_open"]], "s3_upload() (in module megfile.s3_path)": [[8, "megfile.s3_path.s3_upload"]], "save() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.save"]], "scan() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.scan"]], "scan_stat() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.scan_stat"]], "scandir() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.scandir"]], "seek() (megfile.s3_path.s3limitedseekablewriter method)": [[8, "megfile.s3_path.S3LimitedSeekableWriter.seek"]], "seek() (megfile.s3_path.s3prefetchreader method)": [[8, "megfile.s3_path.S3PrefetchReader.seek"]], "stat() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.stat"]], "symlink() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.symlink"]], "sync() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.sync"]], "tell() (megfile.s3_path.s3bufferedwriter method)": [[8, "megfile.s3_path.S3BufferedWriter.tell"]], "tell() (megfile.s3_path.s3prefetchreader method)": [[8, "megfile.s3_path.S3PrefetchReader.tell"]], "unlink() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.unlink"]], "walk() (megfile.s3_path.s3path method)": [[8, "megfile.s3_path.S3Path.walk"]], "write() (megfile.s3_path.s3bufferedwriter method)": [[8, "megfile.s3_path.S3BufferedWriter.write"]], "write() (megfile.s3_path.s3limitedseekablewriter method)": [[8, "megfile.s3_path.S3LimitedSeekableWriter.write"]], "megfile.smart": [[9, "module-megfile.smart"]], "register_copy_func() (in module megfile.smart)": [[9, "megfile.smart.register_copy_func"]], "smart_abspath() (in module megfile.smart)": [[9, "megfile.smart.smart_abspath"]], "smart_access() (in module megfile.smart)": [[9, "megfile.smart.smart_access"]], "smart_cache() (in module megfile.smart)": [[9, "megfile.smart.smart_cache"]], "smart_combine_open() (in module megfile.smart)": [[9, "megfile.smart.smart_combine_open"]], "smart_copy() (in module megfile.smart)": [[9, "megfile.smart.smart_copy"]], "smart_exists() (in module megfile.smart)": [[9, "megfile.smart.smart_exists"]], "smart_getmd5() (in module megfile.smart)": [[9, "megfile.smart.smart_getmd5"]], "smart_getmtime() (in module megfile.smart)": [[9, "megfile.smart.smart_getmtime"]], "smart_getsize() (in module megfile.smart)": [[9, "megfile.smart.smart_getsize"]], "smart_glob() (in module megfile.smart)": [[9, "megfile.smart.smart_glob"]], "smart_glob_stat() (in module megfile.smart)": [[9, "megfile.smart.smart_glob_stat"]], "smart_iglob() (in module megfile.smart)": [[9, "megfile.smart.smart_iglob"]], "smart_isabs() (in module megfile.smart)": [[9, "megfile.smart.smart_isabs"]], "smart_isdir() (in module megfile.smart)": [[9, "megfile.smart.smart_isdir"]], "smart_isfile() (in module megfile.smart)": [[9, "megfile.smart.smart_isfile"]], "smart_islink() (in module megfile.smart)": [[9, "megfile.smart.smart_islink"]], "smart_ismount() (in module megfile.smart)": [[9, "megfile.smart.smart_ismount"]], "smart_listdir() (in module megfile.smart)": [[9, "megfile.smart.smart_listdir"]], "smart_load_content() (in module megfile.smart)": [[9, "megfile.smart.smart_load_content"]], "smart_load_from() (in module megfile.smart)": [[9, "megfile.smart.smart_load_from"]], "smart_load_text() (in module megfile.smart)": [[9, "megfile.smart.smart_load_text"]], "smart_makedirs() (in module megfile.smart)": [[9, "megfile.smart.smart_makedirs"]], "smart_move() (in module megfile.smart)": [[9, "megfile.smart.smart_move"]], "smart_open() (in module megfile.smart)": [[9, "megfile.smart.smart_open"]], "smart_path_join() (in module megfile.smart)": [[9, "megfile.smart.smart_path_join"]], "smart_readlink() (in module megfile.smart)": [[9, "megfile.smart.smart_readlink"]], "smart_realpath() (in module megfile.smart)": [[9, "megfile.smart.smart_realpath"]], "smart_relpath() (in module megfile.smart)": [[9, "megfile.smart.smart_relpath"]], "smart_remove() (in module megfile.smart)": [[9, "megfile.smart.smart_remove"]], "smart_rename() (in module megfile.smart)": [[9, "megfile.smart.smart_rename"]], "smart_save_as() (in module megfile.smart)": [[9, "megfile.smart.smart_save_as"]], "smart_save_content() (in module megfile.smart)": [[9, "megfile.smart.smart_save_content"]], "smart_save_text() (in module megfile.smart)": [[9, "megfile.smart.smart_save_text"]], "smart_scan() (in module megfile.smart)": [[9, "megfile.smart.smart_scan"]], "smart_scan_stat() (in module megfile.smart)": [[9, "megfile.smart.smart_scan_stat"]], "smart_scandir() (in module megfile.smart)": [[9, "megfile.smart.smart_scandir"]], "smart_stat() (in module megfile.smart)": [[9, "megfile.smart.smart_stat"]], "smart_symlink() (in module megfile.smart)": [[9, "megfile.smart.smart_symlink"]], "smart_sync() (in module megfile.smart)": [[9, "megfile.smart.smart_sync"]], "smart_touch() (in module megfile.smart)": [[9, "megfile.smart.smart_touch"]], "smart_unlink() (in module megfile.smart)": [[9, "megfile.smart.smart_unlink"]], "smart_walk() (in module megfile.smart)": [[9, "megfile.smart.smart_walk"]], "smartpath (class in megfile.smart_path)": [[10, "megfile.smart_path.SmartPath"]], "abspath() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.abspath"]], "access() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.access"]], "anchor (megfile.smart_path.smartpath property)": [[10, "megfile.smart_path.SmartPath.anchor"]], "as_posix() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.as_posix"]], "as_uri() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.as_uri"]], "drive (megfile.smart_path.smartpath property)": [[10, "megfile.smart_path.SmartPath.drive"]], "exists() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.exists"]], "from_uri() (megfile.smart_path.smartpath class method)": [[10, "megfile.smart_path.SmartPath.from_uri"]], "get_traditional_path() (in module megfile.smart_path)": [[10, "megfile.smart_path.get_traditional_path"]], "getmtime() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.getmtime"]], "getsize() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.getsize"]], "glob() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.glob"]], "glob_stat() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.glob_stat"]], "iglob() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.iglob"]], "is_absolute() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.is_absolute"]], "is_dir() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.is_dir"]], "is_file() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.is_file"]], "is_mount() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.is_mount"]], "is_reserved() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.is_reserved"]], "is_symlink() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.is_symlink"]], "joinpath() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.joinpath"]], "listdir() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.listdir"]], "load() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.load"]], "match() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.match"]], "md5() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.md5"]], "megfile.smart_path": [[10, "module-megfile.smart_path"]], "mkdir() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.mkdir"]], "name (megfile.smart_path.smartpath property)": [[10, "megfile.smart_path.SmartPath.name"]], "open() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.open"]], "parent (megfile.smart_path.smartpath property)": [[10, "megfile.smart_path.SmartPath.parent"]], "parents (megfile.smart_path.smartpath property)": [[10, "megfile.smart_path.SmartPath.parents"]], "parts (megfile.smart_path.smartpath property)": [[10, "megfile.smart_path.SmartPath.parts"]], "protocol (megfile.smart_path.smartpath property)": [[10, "megfile.smart_path.SmartPath.protocol"]], "readlink() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.readlink"]], "realpath() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.realpath"]], "register() (megfile.smart_path.smartpath class method)": [[10, "megfile.smart_path.SmartPath.register"]], "relative_to() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.relative_to"]], "relpath() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.relpath"]], "remove() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.remove"]], "rename() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.rename"]], "replace() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.replace"]], "root (megfile.smart_path.smartpath property)": [[10, "megfile.smart_path.SmartPath.root"]], "save() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.save"]], "scan() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.scan"]], "scan_stat() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.scan_stat"]], "scandir() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.scandir"]], "stat() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.stat"]], "stem (megfile.smart_path.smartpath property)": [[10, "megfile.smart_path.SmartPath.stem"]], "suffix (megfile.smart_path.smartpath property)": [[10, "megfile.smart_path.SmartPath.suffix"]], "suffixes (megfile.smart_path.smartpath property)": [[10, "megfile.smart_path.SmartPath.suffixes"]], "symlink() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.symlink"]], "touch() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.touch"]], "unlink() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.unlink"]], "walk() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.walk"]], "with_name() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.with_name"]], "with_suffix() (megfile.smart_path.smartpath method)": [[10, "megfile.smart_path.SmartPath.with_suffix"]], "stdiopath (class in megfile.stdio)": [[11, "megfile.stdio.StdioPath"]], "is_stdio() (in module megfile.stdio)": [[11, "megfile.stdio.is_stdio"]], "megfile.stdio": [[11, "module-megfile.stdio"]], "open() (megfile.stdio.stdiopath method)": [[11, "megfile.stdio.StdioPath.open"]], "protocol (megfile.stdio.stdiopath attribute)": [[11, "megfile.stdio.StdioPath.protocol"]], "stdio_open() (in module megfile.stdio)": [[11, "megfile.stdio.stdio_open"]], "stdiopath (class in megfile.stdio_path)": [[12, "megfile.stdio_path.StdioPath"]], "is_stdio() (in module megfile.stdio_path)": [[12, "megfile.stdio_path.is_stdio"]], "megfile.stdio_path": [[12, "module-megfile.stdio_path"]], "open() (megfile.stdio_path.stdiopath method)": [[12, "megfile.stdio_path.StdioPath.open"]], "protocol (megfile.stdio_path.stdiopath attribute)": [[12, "megfile.stdio_path.StdioPath.protocol"]]}})